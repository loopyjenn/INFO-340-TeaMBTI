{"ast":null,"code":"import { translate } from './translate';\nimport { applyToPoint } from './applyToPoint';\nimport { rotate } from './rotate';\nimport { scale } from './scale';\nimport { compose } from './transform';\n\n// https://manivannan-ai.medium.com/find-the-angle-between-three-points-from-2d-using-python-348c513e2cd\n\n/**\n * Calculate a transformation matrix from a point that starts from A to A'\n * This approach can be associated to a pointer that moves on a device\n * @param {Point} startingPoint - Starting point (A)\n * @param {Point} endingPoint - Ending point (A')\n */\nexport function fromOneMovingPoint(startingPoint, endingPoint) {\n  const tx = endingPoint.x - startingPoint.x;\n  const ty = endingPoint.y - startingPoint.y;\n  return translate(tx, ty);\n}\n\n/**\n * Calculate a transformation matrix about two points that move from positions A and B to A' and B'\n * This approach can be associated to a two finger gesture on a touch device\n * @param {Point} startingPoint1 - Starting Point (A)\n * @param {Point} startingPoint2 - Starting Point (B)\n * @param {Point} endingPoint1 - Ending point (A')\n * @param {Point} endingPoint2 - Ending Point (B')\n */\nexport function fromTwoMovingPoints(startingPoint1, startingPoint2, endingPoint1, endingPoint2) {\n  // finds translation\n  const translationMatrix = fromOneMovingPoint(startingPoint1, endingPoint1);\n  const pointA = applyToPoint(translationMatrix, startingPoint2); // I have to translate this point\n  const center = endingPoint1;\n  const pointB = endingPoint2;\n\n  // finds rotation matrix\n  const angle = Math.atan2(pointB.y - center.y, pointB.x - center.x) - Math.atan2(pointA.y - center.y, pointA.x - center.x);\n  const rotationMatrix = rotate(angle, center.x, center.y);\n\n  // finds scale matrix\n  const d1 = Math.sqrt(Math.pow(pointA.x - center.x, 2) + Math.pow(pointA.y - center.y, 2));\n  const d2 = Math.sqrt(Math.pow(pointB.x - center.x, 2) + Math.pow(pointB.y - center.y, 2));\n  const scalingLevel = d2 / d1;\n  const scalingMatrix = scale(scalingLevel, scalingLevel, center.x, center.y);\n  return compose([translationMatrix, scalingMatrix, rotationMatrix]);\n}","map":{"version":3,"names":["translate","applyToPoint","rotate","scale","compose","fromOneMovingPoint","startingPoint","endingPoint","tx","x","ty","y","fromTwoMovingPoints","startingPoint1","startingPoint2","endingPoint1","endingPoint2","translationMatrix","pointA","center","pointB","angle","Math","atan2","rotationMatrix","d1","sqrt","pow","d2","scalingLevel","scalingMatrix"],"sources":["/Users/jenn/Desktop/info340/project-jsorror/node_modules/transformation-matrix/src/fromMovingPoints.js"],"sourcesContent":["import { translate } from './translate'\nimport { applyToPoint } from './applyToPoint'\nimport { rotate } from './rotate'\nimport { scale } from './scale'\nimport { compose } from './transform'\n\n// https://manivannan-ai.medium.com/find-the-angle-between-three-points-from-2d-using-python-348c513e2cd\n\n/**\n * Calculate a transformation matrix from a point that starts from A to A'\n * This approach can be associated to a pointer that moves on a device\n * @param {Point} startingPoint - Starting point (A)\n * @param {Point} endingPoint - Ending point (A')\n */\nexport function fromOneMovingPoint (startingPoint, endingPoint) {\n  const tx = endingPoint.x - startingPoint.x\n  const ty = endingPoint.y - startingPoint.y\n\n  return translate(tx, ty)\n}\n\n/**\n * Calculate a transformation matrix about two points that move from positions A and B to A' and B'\n * This approach can be associated to a two finger gesture on a touch device\n * @param {Point} startingPoint1 - Starting Point (A)\n * @param {Point} startingPoint2 - Starting Point (B)\n * @param {Point} endingPoint1 - Ending point (A')\n * @param {Point} endingPoint2 - Ending Point (B')\n */\nexport function fromTwoMovingPoints (startingPoint1, startingPoint2, endingPoint1, endingPoint2) {\n  // finds translation\n  const translationMatrix = fromOneMovingPoint(startingPoint1, endingPoint1)\n\n  const pointA = applyToPoint(translationMatrix, startingPoint2) // I have to translate this point\n  const center = endingPoint1\n  const pointB = endingPoint2\n\n  // finds rotation matrix\n  const angle = Math.atan2(pointB.y - center.y, pointB.x - center.x) - Math.atan2(pointA.y - center.y, pointA.x - center.x)\n  const rotationMatrix = rotate(angle, center.x, center.y)\n\n  // finds scale matrix\n  const d1 = Math.sqrt(Math.pow(pointA.x - center.x, 2) + Math.pow(pointA.y - center.y, 2))\n  const d2 = Math.sqrt(Math.pow(pointB.x - center.x, 2) + Math.pow(pointB.y - center.y, 2))\n  const scalingLevel = d2 / d1\n  const scalingMatrix = scale(scalingLevel, scalingLevel, center.x, center.y)\n\n  return compose([\n    translationMatrix,\n    scalingMatrix,\n    rotationMatrix\n  ])\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,aAAa;AACvC,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,KAAK,QAAQ,SAAS;AAC/B,SAASC,OAAO,QAAQ,aAAa;;AAErC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,kBAAkBA,CAAEC,aAAa,EAAEC,WAAW,EAAE;EAC9D,MAAMC,EAAE,GAAGD,WAAW,CAACE,CAAC,GAAGH,aAAa,CAACG,CAAC;EAC1C,MAAMC,EAAE,GAAGH,WAAW,CAACI,CAAC,GAAGL,aAAa,CAACK,CAAC;EAE1C,OAAOX,SAAS,CAACQ,EAAE,EAAEE,EAAE,CAAC;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,mBAAmBA,CAAEC,cAAc,EAAEC,cAAc,EAAEC,YAAY,EAAEC,YAAY,EAAE;EAC/F;EACA,MAAMC,iBAAiB,GAAGZ,kBAAkB,CAACQ,cAAc,EAAEE,YAAY,CAAC;EAE1E,MAAMG,MAAM,GAAGjB,YAAY,CAACgB,iBAAiB,EAAEH,cAAc,CAAC,EAAC;EAC/D,MAAMK,MAAM,GAAGJ,YAAY;EAC3B,MAAMK,MAAM,GAAGJ,YAAY;;EAE3B;EACA,MAAMK,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,MAAM,CAACT,CAAC,GAAGQ,MAAM,CAACR,CAAC,EAAES,MAAM,CAACX,CAAC,GAAGU,MAAM,CAACV,CAAC,CAAC,GAAGa,IAAI,CAACC,KAAK,CAACL,MAAM,CAACP,CAAC,GAAGQ,MAAM,CAACR,CAAC,EAAEO,MAAM,CAACT,CAAC,GAAGU,MAAM,CAACV,CAAC,CAAC;EACzH,MAAMe,cAAc,GAAGtB,MAAM,CAACmB,KAAK,EAAEF,MAAM,CAACV,CAAC,EAAEU,MAAM,CAACR,CAAC,CAAC;;EAExD;EACA,MAAMc,EAAE,GAAGH,IAAI,CAACI,IAAI,CAACJ,IAAI,CAACK,GAAG,CAACT,MAAM,CAACT,CAAC,GAAGU,MAAM,CAACV,CAAC,EAAE,CAAC,CAAC,GAAGa,IAAI,CAACK,GAAG,CAACT,MAAM,CAACP,CAAC,GAAGQ,MAAM,CAACR,CAAC,EAAE,CAAC,CAAC,CAAC;EACzF,MAAMiB,EAAE,GAAGN,IAAI,CAACI,IAAI,CAACJ,IAAI,CAACK,GAAG,CAACP,MAAM,CAACX,CAAC,GAAGU,MAAM,CAACV,CAAC,EAAE,CAAC,CAAC,GAAGa,IAAI,CAACK,GAAG,CAACP,MAAM,CAACT,CAAC,GAAGQ,MAAM,CAACR,CAAC,EAAE,CAAC,CAAC,CAAC;EACzF,MAAMkB,YAAY,GAAGD,EAAE,GAAGH,EAAE;EAC5B,MAAMK,aAAa,GAAG3B,KAAK,CAAC0B,YAAY,EAAEA,YAAY,EAAEV,MAAM,CAACV,CAAC,EAAEU,MAAM,CAACR,CAAC,CAAC;EAE3E,OAAOP,OAAO,CAAC,CACba,iBAAiB,EACjBa,aAAa,EACbN,cAAc,CACf,CAAC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}