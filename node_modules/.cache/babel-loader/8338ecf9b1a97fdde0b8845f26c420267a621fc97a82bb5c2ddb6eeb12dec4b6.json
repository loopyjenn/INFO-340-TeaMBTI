{"ast":null,"code":"var _jsxFileName = \"/Users/jenn/Desktop/info340/project-jsorror/src/components/UploadImages.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { getDatabase, ref as dbRef, set } from 'firebase/database';\nimport { getAuth } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UploadAndSaveImage() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [profilePictureUrl, setProfilePictureUrl] = useState('');\n  const [error, setError] = useState(null);\n  const auth = getAuth();\n  const storage = getStorage();\n  const db = getDatabase();\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      setError('No file selected.');\n      return;\n    }\n    const user = auth.currentUser;\n    if (!user) {\n      setError('No user is signed in.');\n      return;\n    }\n    setUploading(true);\n    const storageRef = ref(storage, `profile_pictures/${user.uid}/${file.name}`);\n    try {\n      await uploadBytes(storageRef, file);\n      const url = await getDownloadURL(storageRef);\n      setProfilePictureUrl(url);\n      await set(dbRef(db, `profiles/${user.uid}/picture`), url);\n      setUploading(false);\n      alert('Profile picture uploaded and URL saved successfully');\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setError('Failed to upload file.');\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: uploading,\n      children: uploading ? 'Uploading...' : 'Upload'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 23\n    }, this), profilePictureUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: profilePictureUrl,\n      alt: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(UploadAndSaveImage, \"4jtZQvK2Lbx4QhYY7lA8lBOqlMk=\");\n_c = UploadAndSaveImage;\nvar _c;\n$RefreshReg$(_c, \"UploadAndSaveImage\");","map":{"version":3,"names":["React","useState","getStorage","ref","uploadBytes","getDownloadURL","getDatabase","dbRef","set","getAuth","jsxDEV","_jsxDEV","UploadAndSaveImage","_s","file","setFile","uploading","setUploading","profilePictureUrl","setProfilePictureUrl","error","setError","auth","storage","db","handleFileChange","e","target","files","handleUpload","user","currentUser","storageRef","uid","name","url","alert","console","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","color","src","alt","_c","$RefreshReg$"],"sources":["/Users/jenn/Desktop/info340/project-jsorror/src/components/UploadImages.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { getStorage, ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { getDatabase, ref as dbRef, set } from 'firebase/database';\nimport { getAuth } from 'firebase/auth';\n\nexport function UploadAndSaveImage() {\n    const [file, setFile] = useState(null);\n    const [uploading, setUploading] = useState(false);\n    const [profilePictureUrl, setProfilePictureUrl] = useState('');\n    const [error, setError] = useState(null);\n    const auth = getAuth();\n    const storage = getStorage();\n    const db = getDatabase();\n\n    const handleFileChange = (e) => {\n        setFile(e.target.files[0]);\n    };\n\n    const handleUpload = async () => {\n        if (!file) {\n            setError('No file selected.');\n            return;\n        }\n\n        const user = auth.currentUser;\n        if (!user) {\n            setError('No user is signed in.');\n            return;\n        }\n\n        setUploading(true);\n        const storageRef = ref(storage, `profile_pictures/${user.uid}/${file.name}`);\n        try {\n            await uploadBytes(storageRef, file);\n            const url = await getDownloadURL(storageRef);\n            setProfilePictureUrl(url);\n            await set(dbRef(db, `profiles/${user.uid}/picture`), url);\n            setUploading(false);\n            alert('Profile picture uploaded and URL saved successfully');\n        } catch (error) {\n            console.error('Error uploading file:', error);\n            setError('Failed to upload file.');\n            setUploading(false);\n        }\n    };\n\n    return (\n        <div>\n            <input type=\"file\" accept=\"image/*\" onChange={handleFileChange} />\n            <button onClick={handleUpload} disabled={uploading}>\n                {uploading ? 'Uploading...' : 'Upload'}\n            </button>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            {profilePictureUrl && <img src={profilePictureUrl} alt=\"Profile\" />}\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}