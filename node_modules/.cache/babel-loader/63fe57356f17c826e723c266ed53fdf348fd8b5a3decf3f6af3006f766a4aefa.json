{"ast":null,"code":"const {\n  useState,\n  useCallback,\n  useEffect\n} = require('react');\nmodule.exports = function createGlobalStateHook(initialState) {\n  const rerenders = [];\n  const rerenderAll = () => rerenders.forEach(rerender => rerender());\n  let state = initialState instanceof Function ? initialState() : initialState;\n  return function useGlobalState() {\n    const setRerenderState = useState({})[1];\n    const rerender = useCallback(() => setRerenderState({}), [setRerenderState]);\n    useEffect(() => {\n      rerenders.push(rerender);\n      return () => {\n        rerenders.splice(rerenders.findIndex(rerender), 1);\n      };\n    }, [rerender]);\n    const setState = useCallback(newState => {\n      if (newState instanceof Function) state = newState(state);else state = newState;\n      rerenderAll();\n    }, [rerender]);\n    return [state, setState];\n  };\n};","map":{"version":3,"names":["useState","useCallback","useEffect","require","module","exports","createGlobalStateHook","initialState","rerenders","rerenderAll","forEach","rerender","state","Function","useGlobalState","setRerenderState","push","splice","findIndex","setState","newState"],"sources":["/Users/jenn/Desktop/info340/project-jsorror/node_modules/create-global-state-hook/index.js"],"sourcesContent":["const { useState, useCallback, useEffect } = require('react')\n\nmodule.exports = function createGlobalStateHook(initialState) {\n    const rerenders = []\n    const rerenderAll = () => rerenders.forEach(rerender => rerender())\n    let state = initialState instanceof Function ? initialState() : initialState\n\n    return function useGlobalState() {\n        const setRerenderState = useState({})[1]\n        const rerender = useCallback(() => setRerenderState({}), [setRerenderState])\n\n        useEffect(() => {\n            rerenders.push(rerender)\n            return () => {\n                rerenders.splice(rerenders.findIndex(rerender), 1)\n            }\n        }, [rerender])\n\n        const setState = useCallback(\n            newState => {\n                if (newState instanceof Function) state = newState(state)\n                else state = newState\n                rerenderAll()\n            },\n            [rerender]\n        )\n\n        return [state, setState]\n    }\n}\n"],"mappings":"AAAA,MAAM;EAAEA,QAAQ;EAAEC,WAAW;EAAEC;AAAU,CAAC,GAAGC,OAAO,CAAC,OAAO,CAAC;AAE7DC,MAAM,CAACC,OAAO,GAAG,SAASC,qBAAqBA,CAACC,YAAY,EAAE;EAC1D,MAAMC,SAAS,GAAG,EAAE;EACpB,MAAMC,WAAW,GAAGA,CAAA,KAAMD,SAAS,CAACE,OAAO,CAACC,QAAQ,IAAIA,QAAQ,CAAC,CAAC,CAAC;EACnE,IAAIC,KAAK,GAAGL,YAAY,YAAYM,QAAQ,GAAGN,YAAY,CAAC,CAAC,GAAGA,YAAY;EAE5E,OAAO,SAASO,cAAcA,CAAA,EAAG;IAC7B,MAAMC,gBAAgB,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,MAAMW,QAAQ,GAAGV,WAAW,CAAC,MAAMc,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,CAACA,gBAAgB,CAAC,CAAC;IAE5Eb,SAAS,CAAC,MAAM;MACZM,SAAS,CAACQ,IAAI,CAACL,QAAQ,CAAC;MACxB,OAAO,MAAM;QACTH,SAAS,CAACS,MAAM,CAACT,SAAS,CAACU,SAAS,CAACP,QAAQ,CAAC,EAAE,CAAC,CAAC;MACtD,CAAC;IACL,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;IAEd,MAAMQ,QAAQ,GAAGlB,WAAW,CACxBmB,QAAQ,IAAI;MACR,IAAIA,QAAQ,YAAYP,QAAQ,EAAED,KAAK,GAAGQ,QAAQ,CAACR,KAAK,CAAC,MACpDA,KAAK,GAAGQ,QAAQ;MACrBX,WAAW,CAAC,CAAC;IACjB,CAAC,EACD,CAACE,QAAQ,CACb,CAAC;IAED,OAAO,CAACC,KAAK,EAAEO,QAAQ,CAAC;EAC5B,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}