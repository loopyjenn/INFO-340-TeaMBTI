{"ast":null,"code":"import { useRef, useState, useCallback, useEffect } from 'react';\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar useLatest = function (val) {\n  var ref = useRef(val);\n  ref.current = val;\n  return ref;\n};\nvar observerErr = \"ðŸ’¡ react-cool-dimensions: the browser doesn't support Resize Observer, please use polyfill: https://github.com/wellyshen/react-cool-dimensions#resizeobserver-polyfill\";\nvar borderBoxWarn = \"ðŸ’¡ react-cool-dimensions: the browser doesn't support border-box size, fallback to content-box size. Please see: https://github.com/wellyshen/react-cool-dimensions#border-box-size-measurement\";\nvar getCurrentBreakpoint = function getCurrentBreakpoint(bps, w) {\n  var curBp = \"\";\n  var max = -1;\n  Object.keys(bps).forEach(function (key) {\n    var val = bps[key];\n    if (w >= val && val > max) {\n      curBp = key;\n      max = val;\n    }\n  });\n  return curBp;\n};\nvar useDimensions = function useDimensions(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n    useBorderBoxSize = _ref.useBorderBoxSize,\n    breakpoints = _ref.breakpoints,\n    updateOnBreakpointChange = _ref.updateOnBreakpointChange,\n    shouldUpdate = _ref.shouldUpdate,\n    onResize = _ref.onResize,\n    polyfill = _ref.polyfill;\n  var _useState = useState({\n      currentBreakpoint: \"\",\n      width: null,\n      height: null\n    }),\n    state = _useState[0],\n    setState = _useState[1];\n  var prevSizeRef = useRef({});\n  var prevBreakpointRef = useRef();\n  var observerRef = useRef();\n  var warnedRef = useRef(false);\n  var ref = useRef();\n  var onResizeRef = useLatest(onResize);\n  var shouldUpdateRef = useLatest(shouldUpdate);\n  var unobserve = useCallback(function () {\n    if (observerRef.current) observerRef.current.disconnect();\n  }, []);\n  var observe = useCallback(function (element) {\n    if (element && element !== ref.current) {\n      unobserve();\n      ref.current = element;\n      setState({\n        currentBreakpoint: \"\",\n        width: element.clientWidth,\n        height: element.clientHeight\n      });\n    }\n    if (observerRef.current && ref.current) observerRef.current.observe(ref.current);\n  }, [unobserve]);\n  useEffect(function () {\n    if ((!(\"ResizeObserver\" in window) || !(\"ResizeObserverEntry\" in window)) && !polyfill) {\n      console.error(observerErr);\n      return function () {\n        return null;\n      };\n    }\n    var raf = null;\n\n    // eslint-disable-next-line compat/compat\n    observerRef.current = new (polyfill || ResizeObserver)(function (_ref2) {\n      var entry = _ref2[0];\n      raf = requestAnimationFrame(function () {\n        var contentBoxSize = entry.contentBoxSize,\n          borderBoxSize = entry.borderBoxSize,\n          contentRect = entry.contentRect;\n        var boxSize = contentBoxSize;\n        if (useBorderBoxSize) if (borderBoxSize) {\n          boxSize = borderBoxSize;\n        } else if (!warnedRef.current) {\n          console.warn(borderBoxWarn);\n          warnedRef.current = true;\n        }\n        // @juggle/resize-observer polyfill has different data structure\n        boxSize = Array.isArray(boxSize) ? boxSize[0] : boxSize;\n        var width = boxSize ? boxSize.inlineSize : contentRect.width;\n        var height = boxSize ? boxSize.blockSize : contentRect.height;\n        if (width === prevSizeRef.current.width && height === prevSizeRef.current.height) return;\n        prevSizeRef.current = {\n          width: width,\n          height: height\n        };\n        var e = {\n          currentBreakpoint: \"\",\n          width: width,\n          height: height,\n          entry: entry,\n          observe: observe,\n          unobserve: unobserve\n        };\n        if (breakpoints) {\n          e.currentBreakpoint = getCurrentBreakpoint(breakpoints, width);\n          if (e.currentBreakpoint !== prevBreakpointRef.current) {\n            if (onResizeRef.current) onResizeRef.current(e);\n            prevBreakpointRef.current = e.currentBreakpoint;\n          }\n        } else if (onResizeRef.current) {\n          onResizeRef.current(e);\n        }\n        var next = {\n          currentBreakpoint: e.currentBreakpoint,\n          width: width,\n          height: height,\n          entry: entry\n        };\n        if (shouldUpdateRef.current && !shouldUpdateRef.current(next)) return;\n        if (!shouldUpdateRef.current && breakpoints && updateOnBreakpointChange) {\n          setState(function (prev) {\n            return prev.currentBreakpoint !== next.currentBreakpoint ? next : prev;\n          });\n          return;\n        }\n        setState(next);\n      });\n    });\n    observe();\n    return function () {\n      unobserve();\n      if (raf) cancelAnimationFrame(raf);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  JSON.stringify(breakpoints), useBorderBoxSize, observe, unobserve, updateOnBreakpointChange]);\n  return _extends({}, state, {\n    observe: observe,\n    unobserve: unobserve\n  });\n};\nexport { borderBoxWarn, useDimensions as default, observerErr };","map":{"version":3,"names":["useLatest","val","ref","useRef","current","observerErr","borderBoxWarn","getCurrentBreakpoint","bps","w","curBp","max","Object","keys","forEach","key","useDimensions","_temp","_ref","useBorderBoxSize","breakpoints","updateOnBreakpointChange","shouldUpdate","onResize","polyfill","_useState","useState","currentBreakpoint","width","height","state","setState","prevSizeRef","prevBreakpointRef","observerRef","warnedRef","onResizeRef","shouldUpdateRef","unobserve","useCallback","disconnect","observe","element","clientWidth","clientHeight","useEffect","window","console","error","raf","ResizeObserver","_ref2","entry","requestAnimationFrame","contentBoxSize","borderBoxSize","contentRect","boxSize","warn","Array","isArray","inlineSize","blockSize","e","next","prev","cancelAnimationFrame","JSON","stringify","_extends"],"sources":["/Users/jenn/Desktop/info340/project-jsorror/node_modules/react-cool-dimensions/src/useLatest.ts","/Users/jenn/Desktop/info340/project-jsorror/node_modules/react-cool-dimensions/src/index.ts"],"sourcesContent":["import type { RefObject } from \"react\";\nimport { useRef } from \"react\";\n\nexport default <T>(val: T): RefObject<T> => {\n  const ref = useRef(val);\n  ref.current = val;\n  return ref;\n};\n","import { useState, useRef, useEffect, useCallback } from \"react\";\n\nimport useLatest from \"./useLatest\";\n\nexport const observerErr =\n  \"ðŸ’¡ react-cool-dimensions: the browser doesn't support Resize Observer, please use polyfill: https://github.com/wellyshen/react-cool-dimensions#resizeobserver-polyfill\";\nexport const borderBoxWarn =\n  \"ðŸ’¡ react-cool-dimensions: the browser doesn't support border-box size, fallback to content-box size. Please see: https://github.com/wellyshen/react-cool-dimensions#border-box-size-measurement\";\n\ninterface State {\n  readonly currentBreakpoint: string;\n  readonly width: number | null;\n  readonly height: number | null;\n  readonly entry?: ResizeObserverEntry;\n}\ninterface Observe<T> {\n  (element?: T | null): void;\n}\ninterface Event<T> extends State {\n  readonly entry: ResizeObserverEntry;\n  observe: Observe<T>;\n  unobserve: () => void;\n}\ninterface OnResize<T> {\n  (event: Event<T>): void;\n}\ninterface ShouldUpdate {\n  (state: State): boolean;\n}\ntype Breakpoints = Record<string, number>;\nexport interface Options<T> {\n  useBorderBoxSize?: boolean;\n  breakpoints?: Breakpoints;\n  updateOnBreakpointChange?: boolean;\n  shouldUpdate?: ShouldUpdate;\n  onResize?: OnResize<T>;\n  polyfill?: any;\n}\ninterface Return<T> extends Omit<Event<T>, \"entry\"> {\n  entry?: ResizeObserverEntry;\n}\n\nconst getCurrentBreakpoint = (bps: Breakpoints, w: number): string => {\n  let curBp = \"\";\n  let max = -1;\n\n  Object.keys(bps).forEach((key: string) => {\n    const val = bps[key];\n\n    if (w >= val && val > max) {\n      curBp = key;\n      max = val;\n    }\n  });\n\n  return curBp;\n};\n\nconst useDimensions = <T extends HTMLElement | null>({\n  useBorderBoxSize,\n  breakpoints,\n  updateOnBreakpointChange,\n  shouldUpdate,\n  onResize,\n  polyfill,\n}: Options<T> = {}): Return<T> => {\n  const [state, setState] = useState<State>({\n    currentBreakpoint: \"\",\n    width: null,\n    height: null,\n  });\n  const prevSizeRef = useRef<{ width?: number; height?: number }>({});\n  const prevBreakpointRef = useRef<string>();\n  const observerRef = useRef<ResizeObserver>();\n  const warnedRef = useRef(false);\n  const ref = useRef<T>();\n  const onResizeRef = useLatest<OnResize<T> | undefined>(onResize);\n  const shouldUpdateRef = useLatest<ShouldUpdate | undefined>(shouldUpdate);\n\n  const unobserve = useCallback(() => {\n    if (observerRef.current) observerRef.current.disconnect();\n  }, []);\n\n  const observe = useCallback<Observe<T>>(\n    (element) => {\n      if (element && element !== ref.current) {\n        unobserve();\n        ref.current = element;\n        setState({\n          currentBreakpoint: \"\",\n          width: element.clientWidth,\n          height: element.clientHeight,\n        });\n      }\n      if (observerRef.current && ref.current)\n        observerRef.current.observe(ref.current as HTMLElement);\n    },\n    [unobserve]\n  );\n\n  useEffect(() => {\n    if (\n      (!(\"ResizeObserver\" in window) || !(\"ResizeObserverEntry\" in window)) &&\n      !polyfill\n    ) {\n      console.error(observerErr);\n      return () => null;\n    }\n\n    let raf: number | null = null;\n\n    // eslint-disable-next-line compat/compat\n    observerRef.current = new (polyfill || ResizeObserver)(([entry]: any) => {\n      raf = requestAnimationFrame(() => {\n        const { contentBoxSize, borderBoxSize, contentRect } = entry;\n\n        let boxSize = contentBoxSize;\n        if (useBorderBoxSize)\n          if (borderBoxSize) {\n            boxSize = borderBoxSize;\n          } else if (!warnedRef.current) {\n            console.warn(borderBoxWarn);\n            warnedRef.current = true;\n          }\n        // @juggle/resize-observer polyfill has different data structure\n        boxSize = Array.isArray(boxSize) ? boxSize[0] : boxSize;\n\n        const width = boxSize ? boxSize.inlineSize : contentRect.width;\n        const height = boxSize ? boxSize.blockSize : contentRect.height;\n\n        if (\n          width === prevSizeRef.current.width &&\n          height === prevSizeRef.current.height\n        )\n          return;\n\n        prevSizeRef.current = { width, height };\n\n        const e = {\n          currentBreakpoint: \"\",\n          width,\n          height,\n          entry,\n          observe,\n          unobserve,\n        };\n\n        if (breakpoints) {\n          e.currentBreakpoint = getCurrentBreakpoint(breakpoints, width);\n\n          if (e.currentBreakpoint !== prevBreakpointRef.current) {\n            if (onResizeRef.current) onResizeRef.current(e);\n            prevBreakpointRef.current = e.currentBreakpoint;\n          }\n        } else if (onResizeRef.current) {\n          onResizeRef.current(e);\n        }\n\n        const next = {\n          currentBreakpoint: e.currentBreakpoint,\n          width,\n          height,\n          entry,\n        };\n\n        if (shouldUpdateRef.current && !shouldUpdateRef.current(next)) return;\n\n        if (\n          !shouldUpdateRef.current &&\n          breakpoints &&\n          updateOnBreakpointChange\n        ) {\n          setState((prev) =>\n            prev.currentBreakpoint !== next.currentBreakpoint ? next : prev\n          );\n          return;\n        }\n\n        setState(next);\n      });\n    });\n\n    observe();\n\n    return () => {\n      unobserve();\n      if (raf) cancelAnimationFrame(raf);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    JSON.stringify(breakpoints),\n    useBorderBoxSize,\n    observe,\n    unobserve,\n    updateOnBreakpointChange,\n  ]);\n\n  return { ...state, observe, unobserve };\n};\n\nexport default useDimensions;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}