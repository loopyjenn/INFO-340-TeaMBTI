{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link,useParams,useNavigate}from'react-router-dom';import{getDatabase,ref,set,onValue}from'firebase/database';import{TeamsCharts}from'./TeamsCharts';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Teams(_ref){let{profile,setFirstTwoTeams,mbtiOption}=_ref;const[teamName,setTeamName]=useState('');const[teamList,setTeamList]=useState([]);const[currentTeamIndex,setCurrentTeamIndex]=useState(null);const{teamName:paramTeamName}=useParams();const[showMbtiForm,setShowMbtiForm]=useState(false);const[mbtiData,setMbtiData]=useState({});const[editingProfileIndex,setEditingProfileIndex]=useState(null);const navigate=useNavigate();const[selectedProfiles,setSelectedProfiles]=useState([]);const[showCheckmark,setShowCheckmark]=useState(true);const db=getDatabase();const addTeamToFirebase=(teamName,profiles)=>{const teamRef=ref(db,'teams/'+teamName);set(teamRef,{teamName,profiles}).then(()=>console.log('Team added to Firebase')).catch(error=>console.error(\"Error adding team to Firebase: \",error));setShowCheckmark(false);};const fetchTeamsFromFirebase=()=>{const teamsRef=ref(db,'teams');onValue(teamsRef,snapshot=>{const data=snapshot.val();if(data){const teams=Object.values(data);setTeamList(teams);}else{setTeamList([]);}});};const handleAddTeam=()=>{if(teamName!==''){const newTeam={teamName,profiles:[{...profile,isDefaultProfile:true}]};addTeamToFirebase(teamName,newTeam.profiles);setTeamList(prevTeamList=>{const updatedTeamList=[...prevTeamList,newTeam];setCurrentTeamIndex(updatedTeamList.length-1);return updatedTeamList;});setTeamName('');setShowCheckmark(false);}};const handleAddProfile=()=>{if(currentTeamIndex!==null){const currentProfiles=teamList[currentTeamIndex].profiles;if(currentProfiles.length<6){const newProfile={name:'Name',mbti:'MBTI',petpeeve:'Pet Peeve',hobby:'Hobby',favsong:'Favorite Song',isEditing:true,isDefaultProfile:false};const updatedProfiles=[...currentProfiles,newProfile];const updatedTeamList=[...teamList];updatedTeamList[currentTeamIndex].profiles=updatedProfiles;setTeamList(updatedTeamList);addProfileToFirebase(teamName,updatedProfiles);}}};// const handleCompatibilityFormSubmit = (e, member1Index, member2Index) => {\n//     e.preventDefault();\n//     if (member1Index !== null && member2Index !== null) {\n//         const profiles = teamList[currentTeamIndex].profiles;\n//         setSelectedProfiles([profiles[member1Index], profiles[member2Index]]);\n//         navigate('/compatability', { state: { profiles: [profiles[member1Index], profiles[member2Index]] } });\n//     } else {\n//         alert('Please select two members.');\n//     }\n// };\nuseEffect(()=>{if(paramTeamName){let teamIndex=null;for(let i=0;i<teamList.length;i++){if(teamList[i].teamName===paramTeamName){teamIndex=i;setCurrentTeamIndex(i);setTeamName(paramTeamName);break;}}if(teamIndex===null){}}},[paramTeamName,teamList]);useEffect(()=>{fetchTeamsFromFirebase();},[]);const addProfileToFirebase=(teamName,updatedProfiles)=>{const teamRef=ref(db,'teams/'+teamName+'/profiles');set(teamRef,updatedProfiles).then(()=>console.log('Profile added to Firebase')).catch(error=>console.error(\"Error adding profile to Firebase: \",error));};const handleInputChange=(index,field,value)=>{const updatedTeamList=[...teamList];updatedTeamList[currentTeamIndex].profiles[index][field]=value;setTeamList(updatedTeamList);updatedTeamList[currentTeamIndex].profiles[index].isEditing=true;};const handleSave=index=>{const updatedTeamList=[...teamList];updatedTeamList[currentTeamIndex].profiles[index].isEditing=false;setTeamList(updatedTeamList);updateProfilesInFirebase(updatedTeamList[currentTeamIndex].profiles);};const handleEdit=index=>{const updatedTeamList=teamList.map((team,teamIndex)=>{if(teamIndex!==currentTeamIndex)return team;return{...team,profiles:team.profiles.map((profile,profileIndex)=>{if(profileIndex===index){return{...profile,isEditing:true};}else{return{...profile,isEditing:false};}})};});setTeamList(updatedTeamList);};const handleDelete=index=>{const updatedTeamList=[...teamList];updatedTeamList[currentTeamIndex].profiles=updatedTeamList[currentTeamIndex].profiles.filter((_,i)=>i!==index);setTeamList(updatedTeamList);updateProfilesInFirebase(updatedTeamList[currentTeamIndex].profiles);};const updateProfilesInFirebase=profiles=>{const teamRef=ref(db,'teams/'+teamName+'/profiles');set(teamRef,profiles).then(()=>console.log('Profiles updated in Firebase')).catch(error=>console.error(\"Error updating profiles in Firebase: \",error));};const handleTeamSelect=index=>{setCurrentTeamIndex(index);setTeamName(teamList[index].teamName);};const handleMbtiInputChange=e=>{const{name,value}=e.target;const updatedMbtiData={...mbtiData};updatedMbtiData[editingProfileIndex]={...updatedMbtiData[editingProfileIndex],[name]:value};setMbtiData(updatedMbtiData);};const handleMbtiFormSubmit=e=>{e.preventDefault();const currentProfileMbtiData=mbtiData[editingProfileIndex];if(currentProfileMbtiData&&(currentProfileMbtiData.EI<50||currentProfileMbtiData.SN<50||currentProfileMbtiData.TF<50||currentProfileMbtiData.JP<50||currentProfileMbtiData.EI>100||currentProfileMbtiData.SN>100||currentProfileMbtiData.TF>100||currentProfileMbtiData.JP>100)){alert(\"Percentages must be equal to or greater than 50, and less than 100.\");}else{setShowMbtiForm(false);setEditingProfileIndex(null);const currentProfileIndex=editingProfileIndex;const updatedProfiles=[...teamList[currentTeamIndex].profiles];updatedProfiles[currentProfileIndex].mbtiData=currentProfileMbtiData;const teamRef=ref(db,'teams/'+teamName+'/profiles');set(teamRef,updatedProfiles).then(()=>console.log('MBTI data updated in Firebase')).catch(error=>console.error(\"Error updating MBTI data in Firebase: \",error));}};const resetToDefaultState=()=>{if(teamName!==''){setTeamName('');setCurrentTeamIndex(null);}setShowCheckmark(true);};const showMbtiFormForProfile=index=>{setShowMbtiForm(true);setEditingProfileIndex(index);if(!mbtiData[index]){setMbtiData({...mbtiData,[index]:{EI:'',SN:'',TF:'',JP:''}});}};const[firstTwoTeamNames,setFirstTwoTeamNames]=useState([]);useEffect(()=>{if(teamList.length>=2){setFirstTwoTeamNames([teamList[0].teamName,teamList[1].teamName]);}},[teamList]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsx(\"input\",{id:\"team-name\",type:\"text\",placeholder:\"Team Name...\",value:teamName,onChange:e=>setTeamName(e.target.value)}),showCheckmark&&/*#__PURE__*/_jsx(\"img\",{className:\"checkmark\",src:\"../img/check.png\",alt:\"checkmark icon\",onClick:handleAddTeam}),currentTeamIndex!==null&&/*#__PURE__*/_jsx(\"div\",{className:\"profile\",onClick:handleAddProfile,children:/*#__PURE__*/_jsx(\"div\",{id:\"circle\",children:/*#__PURE__*/_jsx(\"img\",{src:\"../img/plus.png\",alt:\"addition icon\"})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"rect\",children:currentTeamIndex!==null&&teamList[currentTeamIndex]&&teamList[currentTeamIndex].profiles.map((profile,index)=>/*#__PURE__*/_jsx(Profile,{profile:profile,index:index,onInputChange:handleInputChange,onSave:handleSave,onEdit:handleEdit,onDelete:handleDelete,setShowMbtiForm:()=>showMbtiFormForProfile(index),mbtiOption:mbtiOption},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"rectteamslist\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"My Teams\"}),teamList.map((team,index)=>/*#__PURE__*/_jsx(Link,{to:\"/teams/\"+team.teamName,onClick:()=>handleTeamSelect(index),children:/*#__PURE__*/_jsx(\"h4\",{style:{top:25+index*10+'%'},children:team.teamName})},index)),/*#__PURE__*/_jsx(\"a\",{onClick:resetToDefaultState,children:/*#__PURE__*/_jsx(\"img\",{src:\"../img/plus.png\",alt:\"addition icon\"})})]}),/*#__PURE__*/_jsx(\"div\",{children:showMbtiForm&&editingProfileIndex!==null&&/*#__PURE__*/_jsxs(\"form\",{className:\"mbti-form\",onSubmit:handleMbtiFormSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"EI\",children:\"E/I Percentage:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"EI\",name:\"EI\",value:mbtiData[editingProfileIndex].EI,onChange:handleMbtiInputChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"SN\",children:\"S/N Percentage:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"SN\",name:\"SN\",value:mbtiData[editingProfileIndex].SN,onChange:handleMbtiInputChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"TF\",children:\"T/F Percentage:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"TF\",name:\"TF\",value:mbtiData[editingProfileIndex].TF,onChange:handleMbtiInputChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"JP\",children:\"J/P Percentage:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",id:\"JP\",name:\"JP\",value:mbtiData[editingProfileIndex].JP,onChange:handleMbtiInputChange})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"submit-button\",children:\"Save MBTI\"})]})})]}),profile.isEditing&&/*#__PURE__*/_jsx(TeamsCharts,{profiles:[profile],customClass:\"teams-chart\"})]});}function Profile(_ref2){let{profile,index,onInputChange,onSave,onEdit,onDelete,setShowMbtiForm,mbtiOption}=_ref2;let profileContent;if(profile.isEditing){profileContent=/*#__PURE__*/_jsxs(\"div\",{className:\"profile-content\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:profile.name,placeholder:\"Name\",onChange:e=>onInputChange(index,'name',e.target.value)}),/*#__PURE__*/_jsxs(\"select\",{className:\"teams\",value:profile.mbti,onChange:e=>onInputChange(index,'mbti',e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select MBTI\"}),mbtiOption.map(option=>/*#__PURE__*/_jsx(\"option\",{value:option.value,children:option.label},option.value))]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Pet Peeve\",value:profile.petpeeve,onChange:e=>onInputChange(index,'petpeeve',e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:profile.hobby,placeholder:\"Hobby\",onChange:e=>onInputChange(index,'hobby',e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Favorite Song\",value:profile.favsong,onChange:e=>onInputChange(index,'favsong',e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"savebutton\",onClick:()=>onSave(index),children:\"Save\"})]});}else{profileContent=/*#__PURE__*/_jsxs(\"div\",{className:\"profile-content\",children:[/*#__PURE__*/_jsx(\"h5\",{children:profile.name||'Name'}),/*#__PURE__*/_jsx(\"button\",{className:\"tag\",id:\"mbti\",children:profile.mbti||'MBTI'}),/*#__PURE__*/_jsx(\"button\",{className:\"tag\",id:\"petpeeve\",children:profile.petpeeve||'Pet Peeve'}),/*#__PURE__*/_jsx(\"button\",{className:\"tag\",id:\"hobby\",children:profile.hobby||'Hobby'}),/*#__PURE__*/_jsx(\"button\",{className:\"tag\",id:\"favsong\",children:profile.favsong||'Favorite Song'}),!profile.isDefaultProfile&&/*#__PURE__*/_jsx(\"button\",{className:\"editbutton\",onClick:()=>onEdit(index),children:\"Edit\"})]});}const mbtiChartData=profile.isEditing&&profile.mbtiData&&/*#__PURE__*/_jsx(TeamsCharts,{mbtiData:profile.mbtiData,mbtiType:profile.mbti})||null;return/*#__PURE__*/_jsxs(\"div\",{className:\"newprofile\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"newcircle\"}),!profile.isDefaultProfile&&profile.isEditing&&/*#__PURE__*/_jsx(\"button\",{className:\"calcbutton\",onClick:setShowMbtiForm,children:/*#__PURE__*/_jsx(\"img\",{src:\"../img/editmbti.png\",alt:\"Edit MBTI\"})}),!profile.isDefaultProfile&&/*#__PURE__*/_jsx(\"button\",{className:\"delbutton\",onClick:()=>onDelete(index),children:/*#__PURE__*/_jsx(\"img\",{src:\"../img/trash.png\",alt:\"Delete\"})}),profileContent,mbtiChartData]});}// function CompatibilityForm({ profiles, onSubmit }) {\n//     const [member1Index, setMember1Index] = useState(null);\n//     const [member2Index, setMember2Index] = useState(null);\n//     const handleMember1Change = (e) => {\n//         setMember1Index(e.target.value);\n//     };\n//     const handleMember2Change = (e) => {\n//         setMember2Index(e.target.value);\n//     };\n//     return (\n//         <form className=\"team\" onSubmit={(e) => onSubmit(e, member1Index, member2Index)}>\n//             <select id=\"members\" name=\"members\" onChange={handleMember1Change}>\n//                 <option value=\"starter\" disabled>Select Member #1</option>\n//                 {[{ name: \"Select Member #1\", hidden: true }, ...profiles].map((profile, index) => {\n//                     let displayStyle = 'block';\n//                     if (profile.hidden) {\n//                         displayStyle = 'none';\n//                     }\n//                     return (\n//                         <option key={index} value={index} style={{ display: displayStyle }}>\n//                             {profile.name}\n//                         </option>\n//                     );\n//                 })}\n//             </select>\n//             <select id=\"members2\" name=\"members2\" onChange={handleMember2Change}>\n//                 <option value=\"starter\" disabled>Select Member #2</option>\n//                 {[{ name: \"Select Member #2\", hidden: true }, ...profiles].map((profile, index) => {\n//                     let displayStyle = 'block';\n//                     if (profile.hidden) {\n//                         displayStyle = 'none';\n//                     }\n//                     return (\n//                         <option key={index} value={index} style={{ display: displayStyle }}>\n//                             {profile.name}\n//                         </option>\n//                     );\n//                 })}\n//             </select>\n//             <button className=\"compsubmit\" type=\"submit\" value=\"Run Test\">Run Test</button>\n//         </form>\n//     );\n// }\nexport{Teams};","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","useNavigate","getDatabase","ref","set","onValue","TeamsCharts","jsx","_jsx","jsxs","_jsxs","Teams","_ref","profile","setFirstTwoTeams","mbtiOption","teamName","setTeamName","teamList","setTeamList","currentTeamIndex","setCurrentTeamIndex","paramTeamName","showMbtiForm","setShowMbtiForm","mbtiData","setMbtiData","editingProfileIndex","setEditingProfileIndex","navigate","selectedProfiles","setSelectedProfiles","showCheckmark","setShowCheckmark","db","addTeamToFirebase","profiles","teamRef","then","console","log","catch","error","fetchTeamsFromFirebase","teamsRef","snapshot","data","val","teams","Object","values","handleAddTeam","newTeam","isDefaultProfile","prevTeamList","updatedTeamList","length","handleAddProfile","currentProfiles","newProfile","name","mbti","petpeeve","hobby","favsong","isEditing","updatedProfiles","addProfileToFirebase","teamIndex","i","handleInputChange","index","field","value","handleSave","updateProfilesInFirebase","handleEdit","map","team","profileIndex","handleDelete","filter","_","handleTeamSelect","handleMbtiInputChange","e","target","updatedMbtiData","handleMbtiFormSubmit","preventDefault","currentProfileMbtiData","EI","SN","TF","JP","alert","currentProfileIndex","resetToDefaultState","showMbtiFormForProfile","firstTwoTeamNames","setFirstTwoTeamNames","children","id","type","placeholder","onChange","className","src","alt","onClick","Profile","onInputChange","onSave","onEdit","onDelete","to","style","top","onSubmit","htmlFor","customClass","_ref2","profileContent","option","label","mbtiChartData","mbtiType"],"sources":["/Users/jenn/Desktop/info340/project-jsorror/src/components/Teams.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport { getDatabase, ref, set, onValue } from 'firebase/database';\nimport { TeamsCharts } from './TeamsCharts';\n\nfunction Teams({ profile, setFirstTwoTeams, mbtiOption }) {\n    const [teamName, setTeamName] = useState('');\n    const [teamList, setTeamList] = useState([]);\n    const [currentTeamIndex, setCurrentTeamIndex] = useState(null);\n    const { teamName: paramTeamName } = useParams();\n    const [showMbtiForm, setShowMbtiForm] = useState(false);\n    const [mbtiData, setMbtiData] = useState({});\n    const [editingProfileIndex, setEditingProfileIndex] = useState(null);\n    const navigate = useNavigate();\n    const [selectedProfiles, setSelectedProfiles] = useState([]);\n    const [showCheckmark, setShowCheckmark] = useState(true);\n\n    const db = getDatabase();\n\n    const addTeamToFirebase = (teamName, profiles) => {\n        const teamRef = ref(db, 'teams/' + teamName);\n        set(teamRef, { teamName, profiles })\n            .then(() => console.log('Team added to Firebase'))\n            .catch((error) => console.error(\"Error adding team to Firebase: \", error));\n        setShowCheckmark(false);\n    };\n\n    const fetchTeamsFromFirebase = () => {\n        const teamsRef = ref(db, 'teams');\n        onValue(teamsRef, (snapshot) => {\n            const data = snapshot.val();\n            if (data) {\n                const teams = Object.values(data);\n                setTeamList(teams);\n            } else {\n                setTeamList([]);\n            }\n        });\n    };\n\n    const handleAddTeam = () => {\n        if (teamName !== '') {\n            const newTeam = { teamName, profiles: [{ ...profile, isDefaultProfile: true }] };\n            addTeamToFirebase(teamName, newTeam.profiles);\n            setTeamList(prevTeamList => {\n                const updatedTeamList = [...prevTeamList, newTeam];\n                setCurrentTeamIndex(updatedTeamList.length - 1);\n                return updatedTeamList;\n            });\n            setTeamName('');\n            setShowCheckmark(false);\n        }\n    };\n    \n    const handleAddProfile = () => {\n        if (currentTeamIndex !== null) {\n            const currentProfiles = teamList[currentTeamIndex].profiles;\n            if (currentProfiles.length < 6) {\n                const newProfile = {\n                    name: 'Name',\n                    mbti: 'MBTI',\n                    petpeeve: 'Pet Peeve',\n                    hobby: 'Hobby',\n                    favsong: 'Favorite Song',\n                    isEditing: true,\n                    isDefaultProfile: false\n                };\n                const updatedProfiles = [...currentProfiles, newProfile];\n                const updatedTeamList = [...teamList];\n                updatedTeamList[currentTeamIndex].profiles = updatedProfiles;\n                setTeamList(updatedTeamList);\n                addProfileToFirebase(teamName, updatedProfiles);\n            }\n        }\n    };\n\n    // const handleCompatibilityFormSubmit = (e, member1Index, member2Index) => {\n    //     e.preventDefault();\n    //     if (member1Index !== null && member2Index !== null) {\n    //         const profiles = teamList[currentTeamIndex].profiles;\n    //         setSelectedProfiles([profiles[member1Index], profiles[member2Index]]);\n    //         navigate('/compatability', { state: { profiles: [profiles[member1Index], profiles[member2Index]] } });\n    //     } else {\n    //         alert('Please select two members.');\n    //     }\n    // };\n\n    useEffect(() => {\n        if (paramTeamName) {\n            let teamIndex = null;\n            for (let i = 0; i < teamList.length; i++) {\n                if (teamList[i].teamName === paramTeamName) {\n                    teamIndex = i;\n                    setCurrentTeamIndex(i);\n                    setTeamName(paramTeamName);\n                    break;\n                }\n            }\n            if (teamIndex === null) {\n            }\n        }\n    }, [paramTeamName, teamList]);\n    \n\n    useEffect(() => {\n        fetchTeamsFromFirebase();\n    }, []);\n    \n    const addProfileToFirebase = (teamName, updatedProfiles) => {\n        const teamRef = ref(db, 'teams/' + teamName + '/profiles');\n        set(teamRef, updatedProfiles)\n            .then(() => console.log('Profile added to Firebase'))\n            .catch((error) => console.error(\"Error adding profile to Firebase: \", error));\n    };\n    \n    const handleInputChange = (index, field, value) => {\n        const updatedTeamList = [...teamList];\n        updatedTeamList[currentTeamIndex].profiles[index][field] = value;\n        setTeamList(updatedTeamList);\n        updatedTeamList[currentTeamIndex].profiles[index].isEditing = true;\n    };\n\n    const handleSave = (index) => {\n        const updatedTeamList = [...teamList];\n        updatedTeamList[currentTeamIndex].profiles[index].isEditing = false;\n        setTeamList(updatedTeamList);\n        updateProfilesInFirebase(updatedTeamList[currentTeamIndex].profiles);\n    };\n\n    const handleEdit = (index) => {\n        const updatedTeamList = teamList.map((team, teamIndex) => {\n            if (teamIndex !== currentTeamIndex) return team;\n            return {\n                ...team,\n                profiles: team.profiles.map((profile, profileIndex) => {\n                    if (profileIndex === index) {\n                        return { ...profile, isEditing: true };\n                    } else {\n                        return { ...profile, isEditing: false };\n                    }\n                })\n            };\n        });\n        setTeamList(updatedTeamList);\n    };\n    \n\n    const handleDelete = (index) => {\n        const updatedTeamList = [...teamList];\n        updatedTeamList[currentTeamIndex].profiles = updatedTeamList[currentTeamIndex].profiles.filter((_, i) => i !== index);\n        setTeamList(updatedTeamList);\n        updateProfilesInFirebase(updatedTeamList[currentTeamIndex].profiles);\n    };\n\n    const updateProfilesInFirebase = (profiles) => {\n        const teamRef = ref(db, 'teams/' + teamName + '/profiles');\n        set(teamRef, profiles)\n            .then(() => console.log('Profiles updated in Firebase'))\n            .catch((error) => console.error(\"Error updating profiles in Firebase: \", error));\n    };\n\n    const handleTeamSelect = (index) => {\n        setCurrentTeamIndex(index);\n        setTeamName(teamList[index].teamName);\n    };\n\n    const handleMbtiInputChange = (e) => {\n        const { name, value } = e.target;\n        const updatedMbtiData = { ...mbtiData };\n        updatedMbtiData[editingProfileIndex] = {\n            ...updatedMbtiData[editingProfileIndex],\n            [name]: value\n        };\n        setMbtiData(updatedMbtiData);\n    };\n    \n    const handleMbtiFormSubmit = (e) => {\n        e.preventDefault();\n        const currentProfileMbtiData = mbtiData[editingProfileIndex];\n        if (\n            currentProfileMbtiData &&\n            (currentProfileMbtiData.EI < 50 ||\n            currentProfileMbtiData.SN < 50 ||\n            currentProfileMbtiData.TF < 50 ||\n            currentProfileMbtiData.JP < 50 ||\n            currentProfileMbtiData.EI > 100 ||\n            currentProfileMbtiData.SN > 100 ||\n            currentProfileMbtiData.TF > 100 ||\n            currentProfileMbtiData.JP > 100 )\n        ) {\n            alert(\"Percentages must be equal to or greater than 50, and less than 100.\");\n        } else {\n            setShowMbtiForm(false);\n            setEditingProfileIndex(null);\n            \n            const currentProfileIndex = editingProfileIndex;\n            const updatedProfiles = [...teamList[currentTeamIndex].profiles];\n            updatedProfiles[currentProfileIndex].mbtiData = currentProfileMbtiData;\n            const teamRef = ref(db, 'teams/' + teamName + '/profiles');\n            set(teamRef, updatedProfiles)\n                .then(() => console.log('MBTI data updated in Firebase'))\n                .catch((error) => console.error(\"Error updating MBTI data in Firebase: \", error));\n        }\n    };\n\n    const resetToDefaultState = () => {\n        if (teamName !== '') {\n            setTeamName('');\n            setCurrentTeamIndex(null);\n        }\n        setShowCheckmark(true); \n    };\n    \n\n    const showMbtiFormForProfile = (index) => {\n        setShowMbtiForm(true);\n        setEditingProfileIndex(index);\n        if (!mbtiData[index]) {\n            setMbtiData({\n                ...mbtiData,\n                [index]: { EI: '', SN: '', TF: '', JP: '' }\n            });\n        }\n    };\n\n    const [firstTwoTeamNames, setFirstTwoTeamNames] = useState([]);\n\n    useEffect(() => {\n        if (teamList.length >= 2) {\n            setFirstTwoTeamNames([teamList[0].teamName, teamList[1].teamName]);\n        }\n    }, [teamList]);\n    \n\n    return (\n        <div>\n        <main>\n            <header>\n                <input\n                    id=\"team-name\"\n                    type=\"text\"\n                    placeholder=\"Team Name...\"\n                    value={teamName}\n                    onChange={(e) => setTeamName(e.target.value)}\n                />\n                {showCheckmark && (\n                    <img\n                        className=\"checkmark\"\n                        src=\"../img/check.png\"\n                        alt=\"checkmark icon\"\n                        onClick={handleAddTeam}\n                    />\n                )}\n                {currentTeamIndex !== null && (\n                    <div className=\"profile\" onClick={handleAddProfile}>\n                        <div id=\"circle\">\n                            <img src=\"../img/plus.png\" alt=\"addition icon\" />\n                        </div>\n                    </div>\n                )}\n            </header>\n            <div className=\"rect\">\n                    {currentTeamIndex !== null && teamList[currentTeamIndex] && teamList[currentTeamIndex].profiles.map((profile, index) => (\n                        <Profile\n                            key={index}\n                            profile={profile}\n                            index={index}\n                            onInputChange={handleInputChange}\n                            onSave={handleSave}\n                            onEdit={handleEdit}\n                            onDelete={handleDelete}\n                            setShowMbtiForm={() => showMbtiFormForProfile(index)}\n                            mbtiOption={mbtiOption}\n                        />\n                    ))}\n            </div>\n            \n            <div className=\"rectteamslist\">\n                <h3>My Teams</h3>\n                {teamList.map((team, index) => (\n                    <Link key={index} to={\"/teams/\" + team.teamName} onClick={() => handleTeamSelect(index)}>\n                        <h4 style={{ top: (25 + index * 10) + '%' }}>{team.teamName}</h4>\n                    </Link>\n                ))}\n                <a onClick={resetToDefaultState}>\n                    <img src=\"../img/plus.png\" alt=\"addition icon\" />\n                </a>\n            </div>\n            {/* <h2 className=\"comph2\">Compatibility</h2>\n            <h3 className=\"comph3\">Create New Compatibility Assessment</h3>\n            <div className=\"createform\">\n                {currentTeamIndex !== null && <CompatibilityForm profiles={teamList[currentTeamIndex].profiles} onSubmit={handleCompatibilityFormSubmit} />}\n            </div> */}\n            <div>\n                {showMbtiForm && editingProfileIndex !== null && (\n                    <form className=\"mbti-form\" onSubmit={handleMbtiFormSubmit}>\n                        <div className=\"input-group\">\n                            <label htmlFor=\"EI\">E/I Percentage:</label>\n                            <input\n                                type=\"number\"\n                                id=\"EI\"\n                                name=\"EI\"\n                                value={mbtiData[editingProfileIndex].EI}\n                                onChange={handleMbtiInputChange}\n                            />\n                        </div>\n                        <div className=\"input-group\">\n                            <label htmlFor=\"SN\">S/N Percentage:</label>\n                            <input\n                                type=\"number\"\n                                id=\"SN\"\n                                name=\"SN\"\n                                value={mbtiData[editingProfileIndex].SN}\n                                onChange={handleMbtiInputChange}\n                            />\n                        </div>\n                        <div className=\"input-group\">\n                            <label htmlFor=\"TF\">T/F Percentage:</label>\n                            <input\n                                type=\"number\"\n                                id=\"TF\"\n                                name=\"TF\"\n                                value={mbtiData[editingProfileIndex].TF}\n                                onChange={handleMbtiInputChange}\n                            />\n                        </div>\n                        <div className=\"input-group\">\n                            <label htmlFor=\"JP\">J/P Percentage:</label>\n                            <input\n                                type=\"number\"\n                                id=\"JP\"\n                                name=\"JP\"\n                                value={mbtiData[editingProfileIndex].JP}\n                                onChange={handleMbtiInputChange}\n                            />\n                        </div>\n                        <button type=\"submit\" className=\"submit-button\">Save MBTI</button>\n                    </form>\n                )}\n            </div>\n        </main>\n        {profile.isEditing && (\n                <TeamsCharts\n                    profiles={[profile]}\n                    customClass=\"teams-chart\"\n                />\n            )}\n        </div>\n    );\n}    \n\nfunction Profile({ profile, index, onInputChange, onSave, onEdit, onDelete, setShowMbtiForm, mbtiOption }) {\n    let profileContent;\n\n    if (profile.isEditing) {\n        profileContent = (\n            <div className=\"profile-content\">\n                <input\n                    type=\"text\"\n                    value={profile.name}\n                    placeholder=\"Name\"\n                    onChange={(e) => onInputChange(index, 'name', e.target.value)}\n                />\n                <select\n                    className=\"teams\"\n                    value={profile.mbti}\n                    onChange={(e) => onInputChange(index, 'mbti', e.target.value)}\n                >\n                    <option value=\"\" >Select MBTI</option>\n                    {mbtiOption.map((option) => (\n                        <option key={option.value} value={option.value}>{option.label}</option>\n                    ))}\n                </select>\n                <input\n                    type=\"text\"\n                    placeholder=\"Pet Peeve\"\n                    value={profile.petpeeve}\n                    onChange={(e) => onInputChange(index, 'petpeeve', e.target.value)}\n                />\n                <input\n                    type=\"text\"\n                    value={profile.hobby}\n                    placeholder=\"Hobby\"\n                    onChange={(e) => onInputChange(index, 'hobby', e.target.value)}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Favorite Song\"\n                    value={profile.favsong}\n                    onChange={(e) => onInputChange(index, 'favsong', e.target.value)}\n                />\n                <button className=\"savebutton\" onClick={() => onSave(index)}>Save</button>\n            </div>\n        );\n    } else {\n        profileContent = (\n            <div className=\"profile-content\">\n                <h5>{profile.name || 'Name'}</h5>\n                <button className=\"tag\" id=\"mbti\">{profile.mbti || 'MBTI'}</button>\n                <button className=\"tag\" id=\"petpeeve\">{profile.petpeeve || 'Pet Peeve'}</button>\n                <button className=\"tag\" id=\"hobby\">{profile.hobby || 'Hobby'}</button>\n                <button className=\"tag\" id=\"favsong\">{profile.favsong || 'Favorite Song'}</button>\n                {!profile.isDefaultProfile && <button className=\"editbutton\" onClick={() => onEdit(index)}>Edit</button>}\n            </div>\n        );\n    }\n    \n    const mbtiChartData = profile.isEditing && profile.mbtiData && (\n        <TeamsCharts mbtiData={profile.mbtiData} mbtiType={profile.mbti} />\n    ) || null;\n\n    return (\n        <div className=\"newprofile\">\n            <div id=\"newcircle\"></div>\n            {!profile.isDefaultProfile && profile.isEditing && <button className=\"calcbutton\" onClick={setShowMbtiForm}><img src=\"../img/editmbti.png\" alt=\"Edit MBTI\" /></button>}\n            {!profile.isDefaultProfile && <button className=\"delbutton\" onClick={() => onDelete(index)}><img src=\"../img/trash.png\" alt=\"Delete\" /></button>}\n            {profileContent}\n            {mbtiChartData}\n        </div>\n    );\n}\n\n// function CompatibilityForm({ profiles, onSubmit }) {\n//     const [member1Index, setMember1Index] = useState(null);\n//     const [member2Index, setMember2Index] = useState(null);\n\n//     const handleMember1Change = (e) => {\n//         setMember1Index(e.target.value);\n//     };\n    \n//     const handleMember2Change = (e) => {\n//         setMember2Index(e.target.value);\n//     };\n    \n//     return (\n//         <form className=\"team\" onSubmit={(e) => onSubmit(e, member1Index, member2Index)}>\n//             <select id=\"members\" name=\"members\" onChange={handleMember1Change}>\n//                 <option value=\"starter\" disabled>Select Member #1</option>\n//                 {[{ name: \"Select Member #1\", hidden: true }, ...profiles].map((profile, index) => {\n//                     let displayStyle = 'block';\n//                     if (profile.hidden) {\n//                         displayStyle = 'none';\n//                     }\n//                     return (\n//                         <option key={index} value={index} style={{ display: displayStyle }}>\n//                             {profile.name}\n//                         </option>\n//                     );\n//                 })}\n//             </select>\n//             <select id=\"members2\" name=\"members2\" onChange={handleMember2Change}>\n//                 <option value=\"starter\" disabled>Select Member #2</option>\n//                 {[{ name: \"Select Member #2\", hidden: true }, ...profiles].map((profile, index) => {\n//                     let displayStyle = 'block';\n//                     if (profile.hidden) {\n//                         displayStyle = 'none';\n//                     }\n//                     return (\n//                         <option key={index} value={index} style={{ display: displayStyle }}>\n//                             {profile.name}\n//                         </option>\n//                     );\n//                 })}\n//             </select>\n//             <button className=\"compsubmit\" type=\"submit\" value=\"Run Test\">Run Test</button>\n//         </form>\n//     );\n// }\n\nexport { Teams };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}