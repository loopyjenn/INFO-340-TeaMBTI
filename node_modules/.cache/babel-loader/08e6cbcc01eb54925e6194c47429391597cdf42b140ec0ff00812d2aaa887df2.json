{"ast":null,"code":"/**\n * Merge multiple matrices into one\n * @param matrices {...Matrix | Matrix[]} Matrices listed as separate parameters or in an array\n * @returns {Matrix} Affine Matrix\n */\nexport function transform() {\n  for (var _len = arguments.length, matrices = new Array(_len), _key = 0; _key < _len; _key++) {\n    matrices[_key] = arguments[_key];\n  }\n  matrices = Array.isArray(matrices[0]) ? matrices[0] : matrices;\n  const multiply = (m1, m2) => {\n    return {\n      a: m1.a * m2.a + m1.c * m2.b,\n      c: m1.a * m2.c + m1.c * m2.d,\n      e: m1.a * m2.e + m1.c * m2.f + m1.e,\n      b: m1.b * m2.a + m1.d * m2.b,\n      d: m1.b * m2.c + m1.d * m2.d,\n      f: m1.b * m2.e + m1.d * m2.f + m1.f\n    };\n  };\n  switch (matrices.length) {\n    case 0:\n      throw new Error('no matrices provided');\n    case 1:\n      return matrices[0];\n    case 2:\n      return multiply(matrices[0], matrices[1]);\n    default:\n      {\n        const [m1, m2, ...rest] = matrices;\n        const m = multiply(m1, m2);\n        return transform(m, ...rest);\n      }\n  }\n}\n\n/**\n * Merge multiple matrices into one\n * @param matrices {...Matrix | Matrix[]} Matrices listed as separate parameters or in an array\n * @returns {Matrix} Affine Matrix\n */\nexport function compose() {\n  return transform(...arguments);\n}","map":{"version":3,"names":["transform","_len","arguments","length","matrices","Array","_key","isArray","multiply","m1","m2","a","c","b","d","e","f","Error","rest","m","compose"],"sources":["/Users/jenn/Desktop/info340/project-jsorror/node_modules/transformation-matrix/src/transform.js"],"sourcesContent":["/**\n * Merge multiple matrices into one\n * @param matrices {...Matrix | Matrix[]} Matrices listed as separate parameters or in an array\n * @returns {Matrix} Affine Matrix\n */\nexport function transform (...matrices) {\n  matrices = Array.isArray(matrices[0]) ? matrices[0] : matrices\n\n  const multiply = (m1, m2) => {\n    return {\n      a: m1.a * m2.a + m1.c * m2.b,\n      c: m1.a * m2.c + m1.c * m2.d,\n      e: m1.a * m2.e + m1.c * m2.f + m1.e,\n      b: m1.b * m2.a + m1.d * m2.b,\n      d: m1.b * m2.c + m1.d * m2.d,\n      f: m1.b * m2.e + m1.d * m2.f + m1.f\n    }\n  }\n\n  switch (matrices.length) {\n    case 0:\n      throw new Error('no matrices provided')\n\n    case 1:\n      return matrices[0]\n\n    case 2:\n      return multiply(matrices[0], matrices[1])\n\n    default: {\n      const [m1, m2, ...rest] = matrices\n      const m = multiply(m1, m2)\n      return transform(m, ...rest)\n    }\n  }\n}\n\n/**\n * Merge multiple matrices into one\n * @param matrices {...Matrix | Matrix[]} Matrices listed as separate parameters or in an array\n * @returns {Matrix} Affine Matrix\n */\nexport function compose (...matrices) {\n  return transform(...matrices)\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,SAASA,CAAA,EAAe;EAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAVC,QAAQ,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;IAARF,QAAQ,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;EAAA;EACpCF,QAAQ,GAAGC,KAAK,CAACE,OAAO,CAACH,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAGA,QAAQ,CAAC,CAAC,CAAC,GAAGA,QAAQ;EAE9D,MAAMI,QAAQ,GAAGA,CAACC,EAAE,EAAEC,EAAE,KAAK;IAC3B,OAAO;MACLC,CAAC,EAAEF,EAAE,CAACE,CAAC,GAAGD,EAAE,CAACC,CAAC,GAAGF,EAAE,CAACG,CAAC,GAAGF,EAAE,CAACG,CAAC;MAC5BD,CAAC,EAAEH,EAAE,CAACE,CAAC,GAAGD,EAAE,CAACE,CAAC,GAAGH,EAAE,CAACG,CAAC,GAAGF,EAAE,CAACI,CAAC;MAC5BC,CAAC,EAAEN,EAAE,CAACE,CAAC,GAAGD,EAAE,CAACK,CAAC,GAAGN,EAAE,CAACG,CAAC,GAAGF,EAAE,CAACM,CAAC,GAAGP,EAAE,CAACM,CAAC;MACnCF,CAAC,EAAEJ,EAAE,CAACI,CAAC,GAAGH,EAAE,CAACC,CAAC,GAAGF,EAAE,CAACK,CAAC,GAAGJ,EAAE,CAACG,CAAC;MAC5BC,CAAC,EAAEL,EAAE,CAACI,CAAC,GAAGH,EAAE,CAACE,CAAC,GAAGH,EAAE,CAACK,CAAC,GAAGJ,EAAE,CAACI,CAAC;MAC5BE,CAAC,EAAEP,EAAE,CAACI,CAAC,GAAGH,EAAE,CAACK,CAAC,GAAGN,EAAE,CAACK,CAAC,GAAGJ,EAAE,CAACM,CAAC,GAAGP,EAAE,CAACO;IACpC,CAAC;EACH,CAAC;EAED,QAAQZ,QAAQ,CAACD,MAAM;IACrB,KAAK,CAAC;MACJ,MAAM,IAAIc,KAAK,CAAC,sBAAsB,CAAC;IAEzC,KAAK,CAAC;MACJ,OAAOb,QAAQ,CAAC,CAAC,CAAC;IAEpB,KAAK,CAAC;MACJ,OAAOI,QAAQ,CAACJ,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC;IAE3C;MAAS;QACP,MAAM,CAACK,EAAE,EAAEC,EAAE,EAAE,GAAGQ,IAAI,CAAC,GAAGd,QAAQ;QAClC,MAAMe,CAAC,GAAGX,QAAQ,CAACC,EAAE,EAAEC,EAAE,CAAC;QAC1B,OAAOV,SAAS,CAACmB,CAAC,EAAE,GAAGD,IAAI,CAAC;MAC9B;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,OAAOA,CAAA,EAAe;EACpC,OAAOpB,SAAS,CAAC,GAAAE,SAAW,CAAC;AAC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}