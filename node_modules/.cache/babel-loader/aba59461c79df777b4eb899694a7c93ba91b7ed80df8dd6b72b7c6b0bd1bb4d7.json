{"ast":null,"code":"import { inverse } from './inverse';\nimport { transform } from './transform';\nimport { smoothMatrix } from './smoothMatrix';\n\n/**\n * Returns a matrix that transforms a triangle t1 into another triangle t2, or throws an exception if it is impossible.\n * @param t1 {Point[]} Array of points containing the three points for the first triangle\n * @param t2 {Point[]} Array of points containing the three points for the second triangle\n * @returns {Matrix} Matrix which transforms t1 to t2\n * @throws Exception if the matrix becomes not invertible\n */\nexport function fromTriangles(t1, t2) {\n  // point p = first point of the triangle\n  const px1 = t1[0].x != null ? t1[0].x : t1[0][0];\n  const py1 = t1[0].y != null ? t1[0].y : t1[0][1];\n  const px2 = t2[0].x != null ? t2[0].x : t2[0][0];\n  const py2 = t2[0].y != null ? t2[0].y : t2[0][1];\n\n  // point q = second point of the triangle\n  const qx1 = t1[1].x != null ? t1[1].x : t1[1][0];\n  const qy1 = t1[1].y != null ? t1[1].y : t1[1][1];\n  const qx2 = t2[1].x != null ? t2[1].x : t2[1][0];\n  const qy2 = t2[1].y != null ? t2[1].y : t2[1][1];\n\n  // point r = third point of the triangle\n  const rx1 = t1[2].x != null ? t1[2].x : t1[2][0];\n  const ry1 = t1[2].y != null ? t1[2].y : t1[2][1];\n  const rx2 = t2[2].x != null ? t2[2].x : t2[2][0];\n  const ry2 = t2[2].y != null ? t2[2].y : t2[2][1];\n  const r1 = {\n    a: px1 - rx1,\n    b: py1 - ry1,\n    c: qx1 - rx1,\n    d: qy1 - ry1,\n    e: rx1,\n    f: ry1\n  };\n  const r2 = {\n    a: px2 - rx2,\n    b: py2 - ry2,\n    c: qx2 - rx2,\n    d: qy2 - ry2,\n    e: rx2,\n    f: ry2\n  };\n  const inverseR1 = inverse(r1);\n  const affineMatrix = transform([r2, inverseR1]);\n\n  // round the matrix elements to smooth the finite inversion\n  return smoothMatrix(affineMatrix);\n}","map":{"version":3,"names":["inverse","transform","smoothMatrix","fromTriangles","t1","t2","px1","x","py1","y","px2","py2","qx1","qy1","qx2","qy2","rx1","ry1","rx2","ry2","r1","a","b","c","d","e","f","r2","inverseR1","affineMatrix"],"sources":["/Users/jenn/Desktop/info340/project-jsorror/node_modules/transformation-matrix/src/fromTriangles.js"],"sourcesContent":["import { inverse } from './inverse'\nimport { transform } from './transform'\nimport { smoothMatrix } from './smoothMatrix'\n\n/**\n * Returns a matrix that transforms a triangle t1 into another triangle t2, or throws an exception if it is impossible.\n * @param t1 {Point[]} Array of points containing the three points for the first triangle\n * @param t2 {Point[]} Array of points containing the three points for the second triangle\n * @returns {Matrix} Matrix which transforms t1 to t2\n * @throws Exception if the matrix becomes not invertible\n */\nexport function fromTriangles (t1, t2) {\n  // point p = first point of the triangle\n  const px1 = t1[0].x != null ? t1[0].x : t1[0][0]\n  const py1 = t1[0].y != null ? t1[0].y : t1[0][1]\n  const px2 = t2[0].x != null ? t2[0].x : t2[0][0]\n  const py2 = t2[0].y != null ? t2[0].y : t2[0][1]\n\n  // point q = second point of the triangle\n  const qx1 = t1[1].x != null ? t1[1].x : t1[1][0]\n  const qy1 = t1[1].y != null ? t1[1].y : t1[1][1]\n  const qx2 = t2[1].x != null ? t2[1].x : t2[1][0]\n  const qy2 = t2[1].y != null ? t2[1].y : t2[1][1]\n\n  // point r = third point of the triangle\n  const rx1 = t1[2].x != null ? t1[2].x : t1[2][0]\n  const ry1 = t1[2].y != null ? t1[2].y : t1[2][1]\n  const rx2 = t2[2].x != null ? t2[2].x : t2[2][0]\n  const ry2 = t2[2].y != null ? t2[2].y : t2[2][1]\n\n  const r1 = {\n    a: px1 - rx1,\n    b: py1 - ry1,\n    c: qx1 - rx1,\n    d: qy1 - ry1,\n    e: rx1,\n    f: ry1\n  }\n  const r2 = {\n    a: px2 - rx2,\n    b: py2 - ry2,\n    c: qx2 - rx2,\n    d: qy2 - ry2,\n    e: rx2,\n    f: ry2\n  }\n\n  const inverseR1 = inverse(r1)\n  const affineMatrix = transform([r2, inverseR1])\n\n  // round the matrix elements to smooth the finite inversion\n  return smoothMatrix(affineMatrix)\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}