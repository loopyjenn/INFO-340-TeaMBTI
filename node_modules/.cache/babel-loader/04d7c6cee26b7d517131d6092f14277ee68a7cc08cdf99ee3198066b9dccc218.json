{"ast":null,"code":"var _jsxFileName = \"/Users/jenn/Desktop/info340/project-jsorror/src/components/Teams.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport { getDatabase, ref, set, onValue } from 'firebase/database';\nimport { TeamsCharts } from './TeamsCharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Teams({\n  profile,\n  setFirstTwoTeams,\n  mbtiOption\n}) {\n  _s();\n  const [teamName, setTeamName] = useState('');\n  const [teamList, setTeamList] = useState([]);\n  const [currentTeamIndex, setCurrentTeamIndex] = useState(null);\n  const {\n    teamName: paramTeamName\n  } = useParams();\n  const [showMbtiForm, setShowMbtiForm] = useState(false);\n  const [mbtiData, setMbtiData] = useState({});\n  const [editingProfileIndex, setEditingProfileIndex] = useState(null);\n  const navigate = useNavigate();\n  const [selectedProfiles, setSelectedProfiles] = useState([]);\n  const [showCheckmark, setShowCheckmark] = useState(true);\n  const db = getDatabase();\n  const addTeamToFirebase = (teamName, profiles) => {\n    const teamRef = ref(db, 'teams/' + teamName);\n    set(teamRef, {\n      teamName,\n      profiles\n    }).then(() => console.log('Team added to Firebase')).catch(error => console.error(\"Error adding team to Firebase: \", error));\n    setShowCheckmark(false);\n  };\n  const fetchTeamsFromFirebase = () => {\n    const teamsRef = ref(db, 'teams');\n    onValue(teamsRef, snapshot => {\n      const data = snapshot.val();\n      if (data) {\n        const teams = Object.values(data);\n        setTeamList(teams);\n      } else {\n        setTeamList([]);\n      }\n    });\n  };\n  const handleAddTeam = () => {\n    if (teamName !== '') {\n      const newTeam = {\n        teamName,\n        profiles: [{\n          ...profile,\n          isDefaultProfile: true\n        }]\n      };\n      addTeamToFirebase(teamName, newTeam.profiles);\n      setTeamList(prevTeamList => {\n        const updatedTeamList = [...prevTeamList, newTeam];\n        setCurrentTeamIndex(updatedTeamList.length - 1);\n        return updatedTeamList;\n      });\n      setTeamName('');\n      setShowCheckmark(false);\n    }\n  };\n  const handleAddProfile = () => {\n    if (currentTeamIndex !== null) {\n      const currentProfiles = teamList[currentTeamIndex].profiles;\n      if (currentProfiles.length < 6) {\n        const newProfile = {\n          name: 'Name',\n          mbti: 'MBTI',\n          petpeeve: 'Pet Peeve',\n          hobby: 'Hobby',\n          favsong: 'Favorite Song',\n          isEditing: true,\n          isDefaultProfile: false\n        };\n        const updatedProfiles = [...currentProfiles, newProfile];\n        const updatedTeamList = [...teamList];\n        updatedTeamList[currentTeamIndex].profiles = updatedProfiles;\n        setTeamList(updatedTeamList);\n        addProfileToFirebase(teamName, updatedProfiles);\n      }\n    }\n  };\n\n  // const handleCompatibilityFormSubmit = (e, member1Index, member2Index) => {\n  //     e.preventDefault();\n  //     if (member1Index !== null && member2Index !== null) {\n  //         const profiles = teamList[currentTeamIndex].profiles;\n  //         setSelectedProfiles([profiles[member1Index], profiles[member2Index]]);\n  //         navigate('/compatability', { state: { profiles: [profiles[member1Index], profiles[member2Index]] } });\n  //     } else {\n  //         alert('Please select two members.');\n  //     }\n  // };\n\n  useEffect(() => {\n    if (paramTeamName) {\n      let teamIndex = null;\n      for (let i = 0; i < teamList.length; i++) {\n        if (teamList[i].teamName === paramTeamName) {\n          teamIndex = i;\n          setCurrentTeamIndex(i);\n          setTeamName(paramTeamName);\n          break;\n        }\n      }\n      if (teamIndex === null) {}\n    }\n  }, [paramTeamName, teamList]);\n  useEffect(() => {\n    fetchTeamsFromFirebase();\n  }, []);\n  const addProfileToFirebase = (teamName, updatedProfiles) => {\n    const teamRef = ref(db, 'teams/' + teamName + '/profiles');\n    set(teamRef, updatedProfiles).then(() => console.log('Profile added to Firebase')).catch(error => console.error(\"Error adding profile to Firebase: \", error));\n  };\n  const handleInputChange = (index, field, value) => {\n    const updatedTeamList = [...teamList];\n    updatedTeamList[currentTeamIndex].profiles[index][field] = value;\n    setTeamList(updatedTeamList);\n    updatedTeamList[currentTeamIndex].profiles[index].isEditing = true;\n  };\n  const handleSave = index => {\n    const updatedTeamList = [...teamList];\n    updatedTeamList[currentTeamIndex].profiles[index].isEditing = false;\n    setTeamList(updatedTeamList);\n    updateProfilesInFirebase(updatedTeamList[currentTeamIndex].profiles);\n  };\n  const handleEdit = index => {\n    const updatedTeamList = teamList.map((team, teamIndex) => {\n      if (teamIndex !== currentTeamIndex) return team;\n      return {\n        ...team,\n        profiles: team.profiles.map((profile, profileIndex) => {\n          if (profileIndex === index) {\n            return {\n              ...profile,\n              isEditing: true\n            };\n          } else {\n            return {\n              ...profile,\n              isEditing: false\n            };\n          }\n        })\n      };\n    });\n    setTeamList(updatedTeamList);\n  };\n  const handleDelete = index => {\n    const updatedTeamList = [...teamList];\n    updatedTeamList[currentTeamIndex].profiles = updatedTeamList[currentTeamIndex].profiles.filter((_, i) => i !== index);\n    setTeamList(updatedTeamList);\n    updateProfilesInFirebase(updatedTeamList[currentTeamIndex].profiles);\n  };\n  const updateProfilesInFirebase = profiles => {\n    const teamRef = ref(db, 'teams/' + teamName + '/profiles');\n    set(teamRef, profiles).then(() => console.log('Profiles updated in Firebase')).catch(error => console.error(\"Error updating profiles in Firebase: \", error));\n  };\n  const handleTeamSelect = index => {\n    setCurrentTeamIndex(index);\n    setTeamName(teamList[index].teamName);\n  };\n  const handleMbtiInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedMbtiData = {\n      ...mbtiData\n    };\n    updatedMbtiData[editingProfileIndex] = {\n      ...updatedMbtiData[editingProfileIndex],\n      [name]: value\n    };\n    setMbtiData(updatedMbtiData);\n  };\n  const handleMbtiFormSubmit = e => {\n    e.preventDefault();\n    const currentProfileMbtiData = mbtiData[editingProfileIndex];\n    if (currentProfileMbtiData && (currentProfileMbtiData.EI < 50 || currentProfileMbtiData.SN < 50 || currentProfileMbtiData.TF < 50 || currentProfileMbtiData.JP < 50 || currentProfileMbtiData.EI > 100 || currentProfileMbtiData.SN > 100 || currentProfileMbtiData.TF > 100 || currentProfileMbtiData.JP > 100)) {\n      alert(\"Percentages must be equal to or greater than 50, and less than 100.\");\n    } else {\n      setShowMbtiForm(false);\n      setEditingProfileIndex(null);\n      const currentProfileIndex = editingProfileIndex;\n      const updatedProfiles = [...teamList[currentTeamIndex].profiles];\n      updatedProfiles[currentProfileIndex].mbtiData = currentProfileMbtiData;\n      const teamRef = ref(db, 'teams/' + teamName + '/profiles');\n      set(teamRef, updatedProfiles).then(() => console.log('MBTI data updated in Firebase')).catch(error => console.error(\"Error updating MBTI data in Firebase: \", error));\n    }\n  };\n  const resetToDefaultState = () => {\n    if (teamName !== '') {\n      setTeamName('');\n      setCurrentTeamIndex(null);\n    }\n    setShowCheckmark(true);\n  };\n  const showMbtiFormForProfile = index => {\n    setShowMbtiForm(true);\n    setEditingProfileIndex(index);\n    if (!mbtiData[index]) {\n      setMbtiData({\n        ...mbtiData,\n        [index]: {\n          EI: '',\n          SN: '',\n          TF: '',\n          JP: ''\n        }\n      });\n    }\n  };\n  const [firstTwoTeamNames, setFirstTwoTeamNames] = useState([]);\n  useEffect(() => {\n    if (teamList.length >= 2) {\n      setFirstTwoTeamNames([teamList[0].teamName, teamList[1].teamName]);\n    }\n  }, [teamList]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"team-name\",\n          type: \"text\",\n          placeholder: \"Team Name...\",\n          value: teamName,\n          onChange: e => setTeamName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }, this), showCheckmark && /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"checkmark\",\n          src: \"../img/check.png\",\n          alt: \"checkmark icon\",\n          onClick: handleAddTeam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), currentTeamIndex !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile\",\n          onClick: handleAddProfile,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"circle\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"../img/plus.png\",\n              alt: \"addition icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rect\",\n        children: currentTeamIndex !== null && teamList[currentTeamIndex] && teamList[currentTeamIndex].profiles.map((profile, index) => /*#__PURE__*/_jsxDEV(Profile, {\n          profile: profile,\n          index: index,\n          onInputChange: handleInputChange,\n          onSave: handleSave,\n          onEdit: handleEdit,\n          onDelete: handleDelete,\n          setShowMbtiForm: () => showMbtiFormForProfile(index),\n          mbtiOption: mbtiOption\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rectteamslist\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"My Teams\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 17\n        }, this), teamList.map((team, index) => /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/teams/\" + team.teamName,\n          onClick: () => handleTeamSelect(index),\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              top: 25 + index * 10 + '%'\n            },\n            children: team.teamName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 21\n        }, this)), /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: resetToDefaultState,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"../img/plus.png\",\n            alt: \"addition icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: showMbtiForm && editingProfileIndex !== null && /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"mbti-form\",\n          onSubmit: handleMbtiFormSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"EI\",\n              children: \"E/I Percentage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"EI\",\n              name: \"EI\",\n              value: mbtiData[editingProfileIndex].EI,\n              onChange: handleMbtiInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"SN\",\n              children: \"S/N Percentage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"SN\",\n              name: \"SN\",\n              value: mbtiData[editingProfileIndex].SN,\n              onChange: handleMbtiInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"TF\",\n              children: \"T/F Percentage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"TF\",\n              name: \"TF\",\n              value: mbtiData[editingProfileIndex].TF,\n              onChange: handleMbtiInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"JP\",\n              children: \"J/P Percentage:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"JP\",\n              name: \"JP\",\n              value: mbtiData[editingProfileIndex].JP,\n              onChange: handleMbtiInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            children: \"Save MBTI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this), profile.isEditing && /*#__PURE__*/_jsxDEV(TeamsCharts, {\n      profiles: [profile],\n      customClass: \"teams-chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 9\n  }, this);\n}\n_s(Teams, \"9NNLQQV2AUOFh0YPWoIYX+05bDo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Teams;\nfunction Profile({\n  profile,\n  index,\n  onInputChange,\n  onSave,\n  onEdit,\n  onDelete,\n  setShowMbtiForm,\n  mbtiOption\n}) {\n  let profileContent;\n  if (profile.isEditing) {\n    profileContent = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: profile.name,\n        placeholder: \"Name\",\n        onChange: e => onInputChange(index, 'name', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"teams\",\n        value: profile.mbti,\n        onChange: e => onInputChange(index, 'mbti', e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select MBTI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this), mbtiOption.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Pet Peeve\",\n        value: profile.petpeeve,\n        onChange: e => onInputChange(index, 'petpeeve', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: profile.hobby,\n        placeholder: \"Hobby\",\n        onChange: e => onInputChange(index, 'hobby', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Favorite Song\",\n        value: profile.favsong,\n        onChange: e => onInputChange(index, 'favsong', e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"savebutton\",\n        onClick: () => onSave(index),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 13\n    }, this);\n  } else {\n    profileContent = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: profile.name || 'Name'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tag\",\n        id: \"mbti\",\n        children: profile.mbti || 'MBTI'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tag\",\n        id: \"petpeeve\",\n        children: profile.petpeeve || 'Pet Peeve'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tag\",\n        id: \"hobby\",\n        children: profile.hobby || 'Hobby'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tag\",\n        id: \"favsong\",\n        children: profile.favsong || 'Favorite Song'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 17\n      }, this), !profile.isDefaultProfile && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"editbutton\",\n        onClick: () => onEdit(index),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 47\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 13\n    }, this);\n  }\n  const mbtiChartData = profile.isEditing && profile.mbtiData && /*#__PURE__*/_jsxDEV(TeamsCharts, {\n    mbtiData: profile.mbtiData,\n    mbtiType: profile.mbti\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 409,\n    columnNumber: 9\n  }, this) || null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"newprofile\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"newcircle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 13\n    }, this), !profile.isDefaultProfile && profile.isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"calcbutton\",\n      onClick: setShowMbtiForm,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../img/editmbti.png\",\n        alt: \"Edit MBTI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 121\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 64\n    }, this), !profile.isDefaultProfile && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"delbutton\",\n      onClick: () => onDelete(index),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"../img/trash.png\",\n        alt: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 105\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 43\n    }, this), profileContent, mbtiChartData]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 413,\n    columnNumber: 9\n  }, this);\n}\n\n// function CompatibilityForm({ profiles, onSubmit }) {\n//     const [member1Index, setMember1Index] = useState(null);\n//     const [member2Index, setMember2Index] = useState(null);\n\n//     const handleMember1Change = (e) => {\n//         setMember1Index(e.target.value);\n//     };\n\n//     const handleMember2Change = (e) => {\n//         setMember2Index(e.target.value);\n//     };\n\n//     return (\n//         <form className=\"team\" onSubmit={(e) => onSubmit(e, member1Index, member2Index)}>\n//             <select id=\"members\" name=\"members\" onChange={handleMember1Change}>\n//                 <option value=\"starter\" disabled>Select Member #1</option>\n//                 {[{ name: \"Select Member #1\", hidden: true }, ...profiles].map((profile, index) => {\n//                     let displayStyle = 'block';\n//                     if (profile.hidden) {\n//                         displayStyle = 'none';\n//                     }\n//                     return (\n//                         <option key={index} value={index} style={{ display: displayStyle }}>\n//                             {profile.name}\n//                         </option>\n//                     );\n//                 })}\n//             </select>\n//             <select id=\"members2\" name=\"members2\" onChange={handleMember2Change}>\n//                 <option value=\"starter\" disabled>Select Member #2</option>\n//                 {[{ name: \"Select Member #2\", hidden: true }, ...profiles].map((profile, index) => {\n//                     let displayStyle = 'block';\n//                     if (profile.hidden) {\n//                         displayStyle = 'none';\n//                     }\n//                     return (\n//                         <option key={index} value={index} style={{ display: displayStyle }}>\n//                             {profile.name}\n//                         </option>\n//                     );\n//                 })}\n//             </select>\n//             <button className=\"compsubmit\" type=\"submit\" value=\"Run Test\">Run Test</button>\n//         </form>\n//     );\n// }\n_c2 = Profile;\nexport { Teams };\nvar _c, _c2;\n$RefreshReg$(_c, \"Teams\");\n$RefreshReg$(_c2, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","useNavigate","getDatabase","ref","set","onValue","TeamsCharts","jsxDEV","_jsxDEV","Teams","profile","setFirstTwoTeams","mbtiOption","_s","teamName","setTeamName","teamList","setTeamList","currentTeamIndex","setCurrentTeamIndex","paramTeamName","showMbtiForm","setShowMbtiForm","mbtiData","setMbtiData","editingProfileIndex","setEditingProfileIndex","navigate","selectedProfiles","setSelectedProfiles","showCheckmark","setShowCheckmark","db","addTeamToFirebase","profiles","teamRef","then","console","log","catch","error","fetchTeamsFromFirebase","teamsRef","snapshot","data","val","teams","Object","values","handleAddTeam","newTeam","isDefaultProfile","prevTeamList","updatedTeamList","length","handleAddProfile","currentProfiles","newProfile","name","mbti","petpeeve","hobby","favsong","isEditing","updatedProfiles","addProfileToFirebase","teamIndex","i","handleInputChange","index","field","value","handleSave","updateProfilesInFirebase","handleEdit","map","team","profileIndex","handleDelete","filter","_","handleTeamSelect","handleMbtiInputChange","e","target","updatedMbtiData","handleMbtiFormSubmit","preventDefault","currentProfileMbtiData","EI","SN","TF","JP","alert","currentProfileIndex","resetToDefaultState","showMbtiFormForProfile","firstTwoTeamNames","setFirstTwoTeamNames","children","id","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","onClick","Profile","onInputChange","onSave","onEdit","onDelete","to","style","top","onSubmit","htmlFor","customClass","_c","profileContent","option","label","mbtiChartData","mbtiType","_c2","$RefreshReg$"],"sources":["/Users/jenn/Desktop/info340/project-jsorror/src/components/Teams.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\nimport { getDatabase, ref, set, onValue } from 'firebase/database';\nimport { TeamsCharts } from './TeamsCharts';\n\nfunction Teams({ profile, setFirstTwoTeams, mbtiOption }) {\n    const [teamName, setTeamName] = useState('');\n    const [teamList, setTeamList] = useState([]);\n    const [currentTeamIndex, setCurrentTeamIndex] = useState(null);\n    const { teamName: paramTeamName } = useParams();\n    const [showMbtiForm, setShowMbtiForm] = useState(false);\n    const [mbtiData, setMbtiData] = useState({});\n    const [editingProfileIndex, setEditingProfileIndex] = useState(null);\n    const navigate = useNavigate();\n    const [selectedProfiles, setSelectedProfiles] = useState([]);\n    const [showCheckmark, setShowCheckmark] = useState(true);\n\n    const db = getDatabase();\n\n    const addTeamToFirebase = (teamName, profiles) => {\n        const teamRef = ref(db, 'teams/' + teamName);\n        set(teamRef, { teamName, profiles })\n            .then(() => console.log('Team added to Firebase'))\n            .catch((error) => console.error(\"Error adding team to Firebase: \", error));\n        setShowCheckmark(false);\n    };\n\n    const fetchTeamsFromFirebase = () => {\n        const teamsRef = ref(db, 'teams');\n        onValue(teamsRef, (snapshot) => {\n            const data = snapshot.val();\n            if (data) {\n                const teams = Object.values(data);\n                setTeamList(teams);\n            } else {\n                setTeamList([]);\n            }\n        });\n    };\n\n    const handleAddTeam = () => {\n        if (teamName !== '') {\n            const newTeam = { teamName, profiles: [{ ...profile, isDefaultProfile: true }] };\n            addTeamToFirebase(teamName, newTeam.profiles);\n            setTeamList(prevTeamList => {\n                const updatedTeamList = [...prevTeamList, newTeam];\n                setCurrentTeamIndex(updatedTeamList.length - 1);\n                return updatedTeamList;\n            });\n            setTeamName('');\n            setShowCheckmark(false);\n        }\n    };\n    \n    const handleAddProfile = () => {\n        if (currentTeamIndex !== null) {\n            const currentProfiles = teamList[currentTeamIndex].profiles;\n            if (currentProfiles.length < 6) {\n                const newProfile = {\n                    name: 'Name',\n                    mbti: 'MBTI',\n                    petpeeve: 'Pet Peeve',\n                    hobby: 'Hobby',\n                    favsong: 'Favorite Song',\n                    isEditing: true,\n                    isDefaultProfile: false\n                };\n                const updatedProfiles = [...currentProfiles, newProfile];\n                const updatedTeamList = [...teamList];\n                updatedTeamList[currentTeamIndex].profiles = updatedProfiles;\n                setTeamList(updatedTeamList);\n                addProfileToFirebase(teamName, updatedProfiles);\n            }\n        }\n    };\n\n    // const handleCompatibilityFormSubmit = (e, member1Index, member2Index) => {\n    //     e.preventDefault();\n    //     if (member1Index !== null && member2Index !== null) {\n    //         const profiles = teamList[currentTeamIndex].profiles;\n    //         setSelectedProfiles([profiles[member1Index], profiles[member2Index]]);\n    //         navigate('/compatability', { state: { profiles: [profiles[member1Index], profiles[member2Index]] } });\n    //     } else {\n    //         alert('Please select two members.');\n    //     }\n    // };\n\n    useEffect(() => {\n        if (paramTeamName) {\n            let teamIndex = null;\n            for (let i = 0; i < teamList.length; i++) {\n                if (teamList[i].teamName === paramTeamName) {\n                    teamIndex = i;\n                    setCurrentTeamIndex(i);\n                    setTeamName(paramTeamName);\n                    break;\n                }\n            }\n            if (teamIndex === null) {\n            }\n        }\n    }, [paramTeamName, teamList]);\n    \n\n    useEffect(() => {\n        fetchTeamsFromFirebase();\n    }, []);\n    \n    const addProfileToFirebase = (teamName, updatedProfiles) => {\n        const teamRef = ref(db, 'teams/' + teamName + '/profiles');\n        set(teamRef, updatedProfiles)\n            .then(() => console.log('Profile added to Firebase'))\n            .catch((error) => console.error(\"Error adding profile to Firebase: \", error));\n    };\n    \n    const handleInputChange = (index, field, value) => {\n        const updatedTeamList = [...teamList];\n        updatedTeamList[currentTeamIndex].profiles[index][field] = value;\n        setTeamList(updatedTeamList);\n        updatedTeamList[currentTeamIndex].profiles[index].isEditing = true;\n    };\n\n    const handleSave = (index) => {\n        const updatedTeamList = [...teamList];\n        updatedTeamList[currentTeamIndex].profiles[index].isEditing = false;\n        setTeamList(updatedTeamList);\n        updateProfilesInFirebase(updatedTeamList[currentTeamIndex].profiles);\n    };\n\n    const handleEdit = (index) => {\n        const updatedTeamList = teamList.map((team, teamIndex) => {\n            if (teamIndex !== currentTeamIndex) return team;\n            return {\n                ...team,\n                profiles: team.profiles.map((profile, profileIndex) => {\n                    if (profileIndex === index) {\n                        return { ...profile, isEditing: true };\n                    } else {\n                        return { ...profile, isEditing: false };\n                    }\n                })\n            };\n        });\n        setTeamList(updatedTeamList);\n    };\n    \n\n    const handleDelete = (index) => {\n        const updatedTeamList = [...teamList];\n        updatedTeamList[currentTeamIndex].profiles = updatedTeamList[currentTeamIndex].profiles.filter((_, i) => i !== index);\n        setTeamList(updatedTeamList);\n        updateProfilesInFirebase(updatedTeamList[currentTeamIndex].profiles);\n    };\n\n    const updateProfilesInFirebase = (profiles) => {\n        const teamRef = ref(db, 'teams/' + teamName + '/profiles');\n        set(teamRef, profiles)\n            .then(() => console.log('Profiles updated in Firebase'))\n            .catch((error) => console.error(\"Error updating profiles in Firebase: \", error));\n    };\n\n    const handleTeamSelect = (index) => {\n        setCurrentTeamIndex(index);\n        setTeamName(teamList[index].teamName);\n    };\n\n    const handleMbtiInputChange = (e) => {\n        const { name, value } = e.target;\n        const updatedMbtiData = { ...mbtiData };\n        updatedMbtiData[editingProfileIndex] = {\n            ...updatedMbtiData[editingProfileIndex],\n            [name]: value\n        };\n        setMbtiData(updatedMbtiData);\n    };\n    \n    const handleMbtiFormSubmit = (e) => {\n        e.preventDefault();\n        const currentProfileMbtiData = mbtiData[editingProfileIndex];\n        if (\n            currentProfileMbtiData &&\n            (currentProfileMbtiData.EI < 50 ||\n            currentProfileMbtiData.SN < 50 ||\n            currentProfileMbtiData.TF < 50 ||\n            currentProfileMbtiData.JP < 50 ||\n            currentProfileMbtiData.EI > 100 ||\n            currentProfileMbtiData.SN > 100 ||\n            currentProfileMbtiData.TF > 100 ||\n            currentProfileMbtiData.JP > 100 )\n        ) {\n            alert(\"Percentages must be equal to or greater than 50, and less than 100.\");\n        } else {\n            setShowMbtiForm(false);\n            setEditingProfileIndex(null);\n            \n            const currentProfileIndex = editingProfileIndex;\n            const updatedProfiles = [...teamList[currentTeamIndex].profiles];\n            updatedProfiles[currentProfileIndex].mbtiData = currentProfileMbtiData;\n            const teamRef = ref(db, 'teams/' + teamName + '/profiles');\n            set(teamRef, updatedProfiles)\n                .then(() => console.log('MBTI data updated in Firebase'))\n                .catch((error) => console.error(\"Error updating MBTI data in Firebase: \", error));\n        }\n    };\n\n    const resetToDefaultState = () => {\n        if (teamName !== '') {\n            setTeamName('');\n            setCurrentTeamIndex(null);\n        }\n        setShowCheckmark(true); \n    };\n    \n\n    const showMbtiFormForProfile = (index) => {\n        setShowMbtiForm(true);\n        setEditingProfileIndex(index);\n        if (!mbtiData[index]) {\n            setMbtiData({\n                ...mbtiData,\n                [index]: { EI: '', SN: '', TF: '', JP: '' }\n            });\n        }\n    };\n\n    const [firstTwoTeamNames, setFirstTwoTeamNames] = useState([]);\n\n    useEffect(() => {\n        if (teamList.length >= 2) {\n            setFirstTwoTeamNames([teamList[0].teamName, teamList[1].teamName]);\n        }\n    }, [teamList]);\n    \n\n    return (\n        <div>\n        <main>\n            <header>\n                <input\n                    id=\"team-name\"\n                    type=\"text\"\n                    placeholder=\"Team Name...\"\n                    value={teamName}\n                    onChange={(e) => setTeamName(e.target.value)}\n                />\n                {showCheckmark && (\n                    <img\n                        className=\"checkmark\"\n                        src=\"../img/check.png\"\n                        alt=\"checkmark icon\"\n                        onClick={handleAddTeam}\n                    />\n                )}\n                {currentTeamIndex !== null && (\n                    <div className=\"profile\" onClick={handleAddProfile}>\n                        <div id=\"circle\">\n                            <img src=\"../img/plus.png\" alt=\"addition icon\" />\n                        </div>\n                    </div>\n                )}\n            </header>\n            <div className=\"rect\">\n                    {currentTeamIndex !== null && teamList[currentTeamIndex] && teamList[currentTeamIndex].profiles.map((profile, index) => (\n                        <Profile\n                            key={index}\n                            profile={profile}\n                            index={index}\n                            onInputChange={handleInputChange}\n                            onSave={handleSave}\n                            onEdit={handleEdit}\n                            onDelete={handleDelete}\n                            setShowMbtiForm={() => showMbtiFormForProfile(index)}\n                            mbtiOption={mbtiOption}\n                        />\n                    ))}\n            </div>\n            \n            <div className=\"rectteamslist\">\n                <h3>My Teams</h3>\n                {teamList.map((team, index) => (\n                    <Link key={index} to={\"/teams/\" + team.teamName} onClick={() => handleTeamSelect(index)}>\n                        <h4 style={{ top: (25 + index * 10) + '%' }}>{team.teamName}</h4>\n                    </Link>\n                ))}\n                <a onClick={resetToDefaultState}>\n                    <img src=\"../img/plus.png\" alt=\"addition icon\" />\n                </a>\n            </div>\n            {/* <h2 className=\"comph2\">Compatibility</h2>\n            <h3 className=\"comph3\">Create New Compatibility Assessment</h3>\n            <div className=\"createform\">\n                {currentTeamIndex !== null && <CompatibilityForm profiles={teamList[currentTeamIndex].profiles} onSubmit={handleCompatibilityFormSubmit} />}\n            </div> */}\n            <div>\n                {showMbtiForm && editingProfileIndex !== null && (\n                    <form className=\"mbti-form\" onSubmit={handleMbtiFormSubmit}>\n                        <div className=\"input-group\">\n                            <label htmlFor=\"EI\">E/I Percentage:</label>\n                            <input\n                                type=\"number\"\n                                id=\"EI\"\n                                name=\"EI\"\n                                value={mbtiData[editingProfileIndex].EI}\n                                onChange={handleMbtiInputChange}\n                            />\n                        </div>\n                        <div className=\"input-group\">\n                            <label htmlFor=\"SN\">S/N Percentage:</label>\n                            <input\n                                type=\"number\"\n                                id=\"SN\"\n                                name=\"SN\"\n                                value={mbtiData[editingProfileIndex].SN}\n                                onChange={handleMbtiInputChange}\n                            />\n                        </div>\n                        <div className=\"input-group\">\n                            <label htmlFor=\"TF\">T/F Percentage:</label>\n                            <input\n                                type=\"number\"\n                                id=\"TF\"\n                                name=\"TF\"\n                                value={mbtiData[editingProfileIndex].TF}\n                                onChange={handleMbtiInputChange}\n                            />\n                        </div>\n                        <div className=\"input-group\">\n                            <label htmlFor=\"JP\">J/P Percentage:</label>\n                            <input\n                                type=\"number\"\n                                id=\"JP\"\n                                name=\"JP\"\n                                value={mbtiData[editingProfileIndex].JP}\n                                onChange={handleMbtiInputChange}\n                            />\n                        </div>\n                        <button type=\"submit\" className=\"submit-button\">Save MBTI</button>\n                    </form>\n                )}\n            </div>\n        </main>\n        {profile.isEditing && (\n                <TeamsCharts\n                    profiles={[profile]}\n                    customClass=\"teams-chart\"\n                />\n            )}\n        </div>\n    );\n}    \n\nfunction Profile({ profile, index, onInputChange, onSave, onEdit, onDelete, setShowMbtiForm, mbtiOption }) {\n    let profileContent;\n\n    if (profile.isEditing) {\n        profileContent = (\n            <div className=\"profile-content\">\n                <input\n                    type=\"text\"\n                    value={profile.name}\n                    placeholder=\"Name\"\n                    onChange={(e) => onInputChange(index, 'name', e.target.value)}\n                />\n                <select\n                    className=\"teams\"\n                    value={profile.mbti}\n                    onChange={(e) => onInputChange(index, 'mbti', e.target.value)}\n                >\n                    <option value=\"\" >Select MBTI</option>\n                    {mbtiOption.map((option) => (\n                        <option key={option.value} value={option.value}>{option.label}</option>\n                    ))}\n                </select>\n                <input\n                    type=\"text\"\n                    placeholder=\"Pet Peeve\"\n                    value={profile.petpeeve}\n                    onChange={(e) => onInputChange(index, 'petpeeve', e.target.value)}\n                />\n                <input\n                    type=\"text\"\n                    value={profile.hobby}\n                    placeholder=\"Hobby\"\n                    onChange={(e) => onInputChange(index, 'hobby', e.target.value)}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Favorite Song\"\n                    value={profile.favsong}\n                    onChange={(e) => onInputChange(index, 'favsong', e.target.value)}\n                />\n                <button className=\"savebutton\" onClick={() => onSave(index)}>Save</button>\n            </div>\n        );\n    } else {\n        profileContent = (\n            <div className=\"profile-content\">\n                <h5>{profile.name || 'Name'}</h5>\n                <button className=\"tag\" id=\"mbti\">{profile.mbti || 'MBTI'}</button>\n                <button className=\"tag\" id=\"petpeeve\">{profile.petpeeve || 'Pet Peeve'}</button>\n                <button className=\"tag\" id=\"hobby\">{profile.hobby || 'Hobby'}</button>\n                <button className=\"tag\" id=\"favsong\">{profile.favsong || 'Favorite Song'}</button>\n                {!profile.isDefaultProfile && <button className=\"editbutton\" onClick={() => onEdit(index)}>Edit</button>}\n            </div>\n        );\n    }\n    \n    const mbtiChartData = profile.isEditing && profile.mbtiData && (\n        <TeamsCharts mbtiData={profile.mbtiData} mbtiType={profile.mbti} />\n    ) || null;\n\n    return (\n        <div className=\"newprofile\">\n            <div id=\"newcircle\"></div>\n            {!profile.isDefaultProfile && profile.isEditing && <button className=\"calcbutton\" onClick={setShowMbtiForm}><img src=\"../img/editmbti.png\" alt=\"Edit MBTI\" /></button>}\n            {!profile.isDefaultProfile && <button className=\"delbutton\" onClick={() => onDelete(index)}><img src=\"../img/trash.png\" alt=\"Delete\" /></button>}\n            {profileContent}\n            {mbtiChartData}\n        </div>\n    );\n}\n\n// function CompatibilityForm({ profiles, onSubmit }) {\n//     const [member1Index, setMember1Index] = useState(null);\n//     const [member2Index, setMember2Index] = useState(null);\n\n//     const handleMember1Change = (e) => {\n//         setMember1Index(e.target.value);\n//     };\n    \n//     const handleMember2Change = (e) => {\n//         setMember2Index(e.target.value);\n//     };\n    \n//     return (\n//         <form className=\"team\" onSubmit={(e) => onSubmit(e, member1Index, member2Index)}>\n//             <select id=\"members\" name=\"members\" onChange={handleMember1Change}>\n//                 <option value=\"starter\" disabled>Select Member #1</option>\n//                 {[{ name: \"Select Member #1\", hidden: true }, ...profiles].map((profile, index) => {\n//                     let displayStyle = 'block';\n//                     if (profile.hidden) {\n//                         displayStyle = 'none';\n//                     }\n//                     return (\n//                         <option key={index} value={index} style={{ display: displayStyle }}>\n//                             {profile.name}\n//                         </option>\n//                     );\n//                 })}\n//             </select>\n//             <select id=\"members2\" name=\"members2\" onChange={handleMember2Change}>\n//                 <option value=\"starter\" disabled>Select Member #2</option>\n//                 {[{ name: \"Select Member #2\", hidden: true }, ...profiles].map((profile, index) => {\n//                     let displayStyle = 'block';\n//                     if (profile.hidden) {\n//                         displayStyle = 'none';\n//                     }\n//                     return (\n//                         <option key={index} value={index} style={{ display: displayStyle }}>\n//                             {profile.name}\n//                         </option>\n//                     );\n//                 })}\n//             </select>\n//             <button className=\"compsubmit\" type=\"submit\" value=\"Run Test\">Run Test</button>\n//         </form>\n//     );\n// }\n\nexport { Teams };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}